!--------------------------------------------------------------------------------------------------
!     Copyright (c) CERFACS (all rights reserved)
!--------------------------------------------------------------------------------------------------
!     FILE CH4H2_28_304_0_MT.f90
!>    @file CH4H2_28_304_0_MT.f90
!!    Module for calculating the analytical source terms in AVBP
!!    @details Analytical Scheme for methane/H2 air combustion
!!    @authors MT
!!    @date    2023/08/17
!!    @since   
!!    @note    
!--------------------------------------------------------------------------------------------------

!--------------------------------------------------------------------------------------------------
!     MODULE mod_CH4H2_28_304_0_MT
!>    @details Generated by ARCANE custom kinetics routine to compute the chemical source terms.
!!    @authors Q. CazÃ¨res, P. Pepiot, J. Wirtz
!!    @date    2019/01/24
!--------------------------------------------------------------------------------------------------
module mod_CH4H2_28_304_0_MT
  use mod_param_defs
  implicit none

  ! Ideal gas constant
  real(pr), parameter :: Rcst = 8.3144621_pr
  
  ! Use semi-implicit formulation for select species
  logical, parameter :: semiImplicit = .False.
  
  ! Number of elements in the chemical system 
  integer, parameter :: ne = 3
  
  ! Number of non-qss and qss species and reactions
  integer, parameter :: nspec = 28
  integer, parameter :: nqss = 0
  integer, parameter :: nreac = 158
  integer, parameter :: nreac_reverse = 146
  
  ! Actual expression of each reaction
  character(len=65), dimension(nreac + nreac_reverse) :: reacexp
  
  ! Number of thirdbodies
  integer, parameter :: nTB = 5
  integer, parameter :: nFO = 20
  integer, parameter :: nTB_reverse = 5
  integer, parameter :: nFO_reverse = 20
  
  ! Index of elements
  integer, parameter :: eH = 1
  integer, parameter :: eO = 2
  integer, parameter :: eC = 3

  ! Index of species
  integer, parameter :: sH = 1
  integer, parameter :: sH2 = 2
  integer, parameter :: sO = 3
  integer, parameter :: sO2 = 4
  integer, parameter :: sOH = 5
  integer, parameter :: sH2O = 6
  integer, parameter :: sN2 = 7
  integer, parameter :: sHO2 = 8
  integer, parameter :: sH2O2 = 9
  integer, parameter :: sCO = 10
  integer, parameter :: sCO2 = 11
  integer, parameter :: sCH2O = 12
  integer, parameter :: sHCO = 13
  integer, parameter :: sCH3OH = 14
  integer, parameter :: sCH2OH = 15
  integer, parameter :: sCH3O = 16
  integer, parameter :: sCH3O2H = 17
  integer, parameter :: sCH3O2 = 18
  integer, parameter :: sCH4 = 19
  integer, parameter :: sCH3 = 20
  integer, parameter :: sCH2 = 21
  integer, parameter :: sCH2GSG = 22
  integer, parameter :: sC = 23
  integer, parameter :: sC2H6 = 24
  integer, parameter :: sC2H5 = 25
  integer, parameter :: sC2H4 = 26
  integer, parameter :: sC2H3 = 27
  integer, parameter :: sHCCO = 28

  ! Index of reactions
  integer, parameter :: r1f = 1
  integer, parameter :: r2f = 2
  integer, parameter :: r3f = 3
  integer, parameter :: r4f = 4
  integer, parameter :: r5f = 5
  integer, parameter :: r6f = 6
  integer, parameter :: r7f = 7
  integer, parameter :: r8f = 8
  integer, parameter :: r9f = 9
  integer, parameter :: r10f = 10
  integer, parameter :: r11f = 11
  integer, parameter :: r12f = 12
  integer, parameter :: r13f = 13
  integer, parameter :: r14f = 14
  integer, parameter :: r15f = 15
  integer, parameter :: r16f = 16
  integer, parameter :: r17f = 17
  integer, parameter :: r18f = 18
  integer, parameter :: r19f = 19
  integer, parameter :: r20f = 20
  integer, parameter :: r21f = 21
  integer, parameter :: r22f = 22
  integer, parameter :: r23f = 23
  integer, parameter :: r24f = 24
  integer, parameter :: r25f = 25
  integer, parameter :: r26f = 26
  integer, parameter :: r27f = 27
  integer, parameter :: r28f = 28
  integer, parameter :: r29f = 29
  integer, parameter :: r30f = 30
  integer, parameter :: r31f = 31
  integer, parameter :: r32f = 32
  integer, parameter :: r33f = 33
  integer, parameter :: r34f = 34
  integer, parameter :: r35f = 35
  integer, parameter :: r36f = 36
  integer, parameter :: r37f = 37
  integer, parameter :: r38f = 38
  integer, parameter :: r39f = 39
  integer, parameter :: r40f = 40
  integer, parameter :: r41f = 41
  integer, parameter :: r42f = 42
  integer, parameter :: r43f = 43
  integer, parameter :: r44f = 44
  integer, parameter :: r45f = 45
  integer, parameter :: r46f = 46
  integer, parameter :: r47f = 47
  integer, parameter :: r48f = 48
  integer, parameter :: r49f = 49
  integer, parameter :: r50f = 50
  integer, parameter :: r51f = 51
  integer, parameter :: r52f = 52
  integer, parameter :: r53f = 53
  integer, parameter :: r54f = 54
  integer, parameter :: r55f = 55
  integer, parameter :: r56f = 56
  integer, parameter :: r57f = 57
  integer, parameter :: r58f = 58
  integer, parameter :: r59f = 59
  integer, parameter :: r60f = 60
  integer, parameter :: r61f = 61
  integer, parameter :: r62f = 62
  integer, parameter :: r63f = 63
  integer, parameter :: r64f = 64
  integer, parameter :: r65f = 65
  integer, parameter :: r66f = 66
  integer, parameter :: r67f = 67
  integer, parameter :: r68f = 68
  integer, parameter :: r69f = 69
  integer, parameter :: r70f = 70
  integer, parameter :: r71f = 71
  integer, parameter :: r72f = 72
  integer, parameter :: r73f = 73
  integer, parameter :: r74f = 74
  integer, parameter :: r75f = 75
  integer, parameter :: r76f = 76
  integer, parameter :: r77f = 77
  integer, parameter :: r78f = 78
  integer, parameter :: r79f = 79
  integer, parameter :: r80f = 80
  integer, parameter :: r81f = 81
  integer, parameter :: r82f = 82
  integer, parameter :: r83f = 83
  integer, parameter :: r84f = 84
  integer, parameter :: r85f = 85
  integer, parameter :: r86f = 86
  integer, parameter :: r87f = 87
  integer, parameter :: r88f = 88
  integer, parameter :: r89f = 89
  integer, parameter :: r90f = 90
  integer, parameter :: r91f = 91
  integer, parameter :: r92f = 92
  integer, parameter :: r93f = 93
  integer, parameter :: r94f = 94
  integer, parameter :: r95f = 95
  integer, parameter :: r96f = 96
  integer, parameter :: r97f = 97
  integer, parameter :: r98f = 98
  integer, parameter :: r99f = 99
  integer, parameter :: r100f = 100
  integer, parameter :: r101f = 101
  integer, parameter :: r102f = 102
  integer, parameter :: r103f = 103
  integer, parameter :: r104f = 104
  integer, parameter :: r105f = 105
  integer, parameter :: r106f = 106
  integer, parameter :: r107f = 107
  integer, parameter :: r108f = 108
  integer, parameter :: r109f = 109
  integer, parameter :: r110f = 110
  integer, parameter :: r111f = 111
  integer, parameter :: r112f = 112
  integer, parameter :: r113f = 113
  integer, parameter :: r114f = 114
  integer, parameter :: r115f = 115
  integer, parameter :: r116f = 116
  integer, parameter :: r117f = 117
  integer, parameter :: r118f = 118
  integer, parameter :: r119f = 119
  integer, parameter :: r120f = 120
  integer, parameter :: r121f = 121
  integer, parameter :: r122f = 122
  integer, parameter :: r123f = 123
  integer, parameter :: r124f = 124
  integer, parameter :: r125f = 125
  integer, parameter :: r126f = 126
  integer, parameter :: r127f = 127
  integer, parameter :: r128f = 128
  integer, parameter :: r129f = 129
  integer, parameter :: r130f = 130
  integer, parameter :: r131f = 131
  integer, parameter :: r132f = 132
  integer, parameter :: r133f = 133
  integer, parameter :: r134f = 134
  integer, parameter :: r135f = 135
  integer, parameter :: r136f = 136
  integer, parameter :: r137f = 137
  integer, parameter :: r138f = 138
  integer, parameter :: r139f = 139
  integer, parameter :: r140f = 140
  integer, parameter :: r141f = 141
  integer, parameter :: r142f = 142
  integer, parameter :: r143f = 143
  integer, parameter :: r144f = 144
  integer, parameter :: r145f = 145
  integer, parameter :: r146f = 146
  integer, parameter :: r147f = 147
  integer, parameter :: r148f = 148
  integer, parameter :: r149f = 149
  integer, parameter :: r150f = 150
  integer, parameter :: r151f = 151
  integer, parameter :: r152f = 152
  integer, parameter :: r153f = 153
  integer, parameter :: r154f = 154
  integer, parameter :: r155f = 155
  integer, parameter :: r156f = 156
  integer, parameter :: r157f = 157
  integer, parameter :: r158f = 158
  integer, parameter :: r1b = 159
  integer, parameter :: r2b = 160
  integer, parameter :: r3b = 161
  integer, parameter :: r4b = 162
  integer, parameter :: r5b = 163
  integer, parameter :: r6b = 164
  integer, parameter :: r7b = 165
  integer, parameter :: r8b = 166
  integer, parameter :: r9b = 167
  integer, parameter :: r10b = 168
  integer, parameter :: r11b = 169
  integer, parameter :: r12b = 170
  integer, parameter :: r13b = 171
  integer, parameter :: r14b = 172
  integer, parameter :: r15b = 173
  integer, parameter :: r16b = 174
  integer, parameter :: r17b = 175
  integer, parameter :: r18b = 176
  integer, parameter :: r19b = 177
  integer, parameter :: r20b = 178
  integer, parameter :: r21b = 179
  integer, parameter :: r22b = 180
  integer, parameter :: r23b = 181
  integer, parameter :: r24b = 182
  integer, parameter :: r25b = 183
  integer, parameter :: r26b = 184
  integer, parameter :: r27b = 185
  integer, parameter :: r28b = 186
  integer, parameter :: r29b = 187
  integer, parameter :: r30b = 188
  integer, parameter :: r31b = 189
  integer, parameter :: r32b = 190
  integer, parameter :: r33b = 191
  integer, parameter :: r34b = 192
  integer, parameter :: r35b = 193
  integer, parameter :: r38b = 194
  integer, parameter :: r39b = 195
  integer, parameter :: r40b = 196
  integer, parameter :: r41b = 197
  integer, parameter :: r42b = 198
  integer, parameter :: r43b = 199
  integer, parameter :: r44b = 200
  integer, parameter :: r45b = 201
  integer, parameter :: r46b = 202
  integer, parameter :: r47b = 203
  integer, parameter :: r48b = 204
  integer, parameter :: r49b = 205
  integer, parameter :: r50b = 206
  integer, parameter :: r51b = 207
  integer, parameter :: r52b = 208
  integer, parameter :: r53b = 209
  integer, parameter :: r54b = 210
  integer, parameter :: r55b = 211
  integer, parameter :: r56b = 212
  integer, parameter :: r57b = 213
  integer, parameter :: r58b = 214
  integer, parameter :: r59b = 215
  integer, parameter :: r60b = 216
  integer, parameter :: r61b = 217
  integer, parameter :: r62b = 218
  integer, parameter :: r63b = 219
  integer, parameter :: r64b = 220
  integer, parameter :: r65b = 221
  integer, parameter :: r66b = 222
  integer, parameter :: r67b = 223
  integer, parameter :: r68b = 224
  integer, parameter :: r69b = 225
  integer, parameter :: r70b = 226
  integer, parameter :: r71b = 227
  integer, parameter :: r72b = 228
  integer, parameter :: r73b = 229
  integer, parameter :: r74b = 230
  integer, parameter :: r75b = 231
  integer, parameter :: r76b = 232
  integer, parameter :: r77b = 233
  integer, parameter :: r78b = 234
  integer, parameter :: r79b = 235
  integer, parameter :: r80b = 236
  integer, parameter :: r81b = 237
  integer, parameter :: r82b = 238
  integer, parameter :: r83b = 239
  integer, parameter :: r84b = 240
  integer, parameter :: r85b = 241
  integer, parameter :: r86b = 242
  integer, parameter :: r87b = 243
  integer, parameter :: r88b = 244
  integer, parameter :: r89b = 245
  integer, parameter :: r90b = 246
  integer, parameter :: r91b = 247
  integer, parameter :: r92b = 248
  integer, parameter :: r93b = 249
  integer, parameter :: r94b = 250
  integer, parameter :: r95b = 251
  integer, parameter :: r96b = 252
  integer, parameter :: r97b = 253
  integer, parameter :: r98b = 254
  integer, parameter :: r99b = 255
  integer, parameter :: r102b = 256
  integer, parameter :: r103b = 257
  integer, parameter :: r104b = 258
  integer, parameter :: r105b = 259
  integer, parameter :: r106b = 260
  integer, parameter :: r107b = 261
  integer, parameter :: r108b = 262
  integer, parameter :: r109b = 263
  integer, parameter :: r110b = 264
  integer, parameter :: r112b = 265
  integer, parameter :: r113b = 266
  integer, parameter :: r114b = 267
  integer, parameter :: r115b = 268
  integer, parameter :: r116b = 269
  integer, parameter :: r117b = 270
  integer, parameter :: r118b = 271
  integer, parameter :: r121b = 272
  integer, parameter :: r122b = 273
  integer, parameter :: r123b = 274
  integer, parameter :: r124b = 275
  integer, parameter :: r125b = 276
  integer, parameter :: r126b = 277
  integer, parameter :: r127b = 278
  integer, parameter :: r128b = 279
  integer, parameter :: r129b = 280
  integer, parameter :: r130b = 281
  integer, parameter :: r131b = 282
  integer, parameter :: r132b = 283
  integer, parameter :: r133b = 284
  integer, parameter :: r134b = 285
  integer, parameter :: r135b = 286
  integer, parameter :: r136b = 287
  integer, parameter :: r137b = 288
  integer, parameter :: r138b = 289
  integer, parameter :: r139b = 290
  integer, parameter :: r140b = 291
  integer, parameter :: r141b = 292
  integer, parameter :: r144b = 293
  integer, parameter :: r147b = 294
  integer, parameter :: r148b = 295
  integer, parameter :: r149b = 296
  integer, parameter :: r150b = 297
  integer, parameter :: r151b = 298
  integer, parameter :: r152b = 299
  integer, parameter :: r153b = 300
  integer, parameter :: r154b = 301
  integer, parameter :: r155b = 302
  integer, parameter :: r156b = 303
  integer, parameter :: r157b = 304
  
  ! Index of third body species
  integer, parameter :: mM5 = 1
  integer, parameter :: mM6 = 2
  integer, parameter :: mM7 = 3
  integer, parameter :: mM8 = 4
  integer, parameter :: mM30 = 5
  
  integer, parameter :: mM9 = 6
  integer, parameter :: mM10 = 7
  integer, parameter :: mM11 = 8
  integer, parameter :: mM18 = 9
  integer, parameter :: mM19 = 10
  integer, parameter :: mM25 = 11
  integer, parameter :: mM41 = 12
  integer, parameter :: mM42 = 13
  integer, parameter :: mM48 = 14
  integer, parameter :: mM55 = 15
  integer, parameter :: mM66 = 16
  integer, parameter :: mM67 = 17
  integer, parameter :: mM68 = 18
  integer, parameter :: mM79 = 19
  integer, parameter :: mM94 = 20
  integer, parameter :: mM117 = 21
  integer, parameter :: mM123 = 22
  integer, parameter :: mM124 = 23
  integer, parameter :: mM134 = 24
  integer, parameter :: mM147 = 25
  
  ! Index of third body reactions
  integer, parameter :: TBr5f = 1
  integer, parameter :: TBr6f = 2
  integer, parameter :: TBr7f = 3
  integer, parameter :: TBr8f = 4
  integer, parameter :: TBr30f = 5
  integer, parameter :: TBr5b = 6
  integer, parameter :: TBr6b = 7
  integer, parameter :: TBr7b = 8
  integer, parameter :: TBr8b = 9
  integer, parameter :: TBr30b = 10
  
  ! Index of fall off reactions
  integer, parameter :: FOr9f = 1
  integer, parameter :: FOr10f = 2
  integer, parameter :: FOr11f = 3
  integer, parameter :: FOr18f = 4
  integer, parameter :: FOr19f = 5
  integer, parameter :: FOr25f = 6
  integer, parameter :: FOr41f = 7
  integer, parameter :: FOr42f = 8
  integer, parameter :: FOr48f = 9
  integer, parameter :: FOr55f = 10
  integer, parameter :: FOr66f = 11
  integer, parameter :: FOr67f = 12
  integer, parameter :: FOr68f = 13
  integer, parameter :: FOr79f = 14
  integer, parameter :: FOr94f = 15
  integer, parameter :: FOr117f = 16
  integer, parameter :: FOr123f = 17
  integer, parameter :: FOr124f = 18
  integer, parameter :: FOr134f = 19
  integer, parameter :: FOr147f = 20
  integer, parameter :: FOr9b = 21
  integer, parameter :: FOr10b = 22
  integer, parameter :: FOr11b = 23
  integer, parameter :: FOr18b = 24
  integer, parameter :: FOr19b = 25
  integer, parameter :: FOr25b = 26
  integer, parameter :: FOr41b = 27
  integer, parameter :: FOr42b = 28
  integer, parameter :: FOr48b = 29
  integer, parameter :: FOr55b = 30
  integer, parameter :: FOr66b = 31
  integer, parameter :: FOr67b = 32
  integer, parameter :: FOr68b = 33
  integer, parameter :: FOr79b = 34
  integer, parameter :: FOr94b = 35
  integer, parameter :: FOr117b = 36
  integer, parameter :: FOr123b = 37
  integer, parameter :: FOr124b = 38
  integer, parameter :: FOr134b = 39
  integer, parameter :: FOr147b = 40
  
  ! Molar mass
  real(pr), parameter, dimension(nspec) :: W_sp =(/ &
       1.007940e-03_pr, & ! H
       2.015880e-03_pr, & ! H2
       1.599940e-02_pr, & ! O
       3.199880e-02_pr, & ! O2
       1.700734e-02_pr, & ! OH
       1.801528e-02_pr, & ! H2O
       2.801348e-02_pr, & ! N2
       3.300674e-02_pr, & ! HO2
       3.401468e-02_pr, & ! H2O2
       2.801040e-02_pr, & ! CO
       4.400980e-02_pr, & ! CO2
       3.002628e-02_pr, & ! CH2O
       2.901834e-02_pr, & ! HCO
       3.204216e-02_pr, & ! CH3OH
       3.103422e-02_pr, & ! CH2OH
       3.103422e-02_pr, & ! CH3O
       4.804156e-02_pr, & ! CH3O2H
       4.703362e-02_pr, & ! CH3O2
       1.604276e-02_pr, & ! CH4
       1.503482e-02_pr, & ! CH3
       1.402688e-02_pr, & ! CH2
       1.402688e-02_pr, & ! CH2GSG
       1.201100e-02_pr, & ! C
       3.006964e-02_pr, & ! C2H6
       2.906170e-02_pr, & ! C2H5
       2.805376e-02_pr, & ! C2H4
       2.704582e-02_pr, & ! C2H3
       4.102934e-02_pr & ! HCCO
       /)
  
contains

  ! ----------------------------------------------- !
  !     Subroutine for explicit reaction names      !
  ! ----------------------------------------------- !
  subroutine reaction_expressions
    implicit none
    
    reacexp(1) = "H + O2 <=> O + OH"
    reacexp(2) = "H2 + O <=> H + OH"
    reacexp(3) = "H2 + OH <=> H + H2O"
    reacexp(4) = "H2O + O <=> 2 OH"
    reacexp(5) = "H2 + M <=> 2 H + M"
    reacexp(6) = "2 O + M <=> O2 + M"
    reacexp(7) = "H + O + M <=> OH + M"
    reacexp(8) = "H + OH + M <=> H2O + M"
    reacexp(9) = "H + O2 (+M) <=> HO2 (+M)"
    reacexp(10) = "H + O2 (+M) <=> HO2 (+M)"
    reacexp(11) = "H + O2 (+M) <=> HO2 (+M)"
    reacexp(12) = "H + HO2 <=> 2 OH"
    reacexp(13) = "H2 + O2 <=> H + HO2"
    reacexp(14) = "HO2 + O <=> O2 + OH"
    reacexp(15) = "HO2 + OH <=> H2O + O2"
    reacexp(16) = "2 HO2 <=> H2O2 + O2"
    reacexp(17) = "2 HO2 <=> H2O2 + O2"
    reacexp(18) = "H2O2 (+H2O) <=> 2 OH (+H2O)"
    reacexp(19) = "H2O2 (+M) <=> 2 OH (+M)"
    reacexp(20) = "H + H2O2 <=> H2O + OH"
    reacexp(21) = "H + H2O2 <=> H2 + HO2"
    reacexp(22) = "H2O2 + O <=> HO2 + OH"
    reacexp(23) = "H2O2 + OH <=> H2O + HO2"
    reacexp(24) = "H2O2 + OH <=> H2O + HO2"
    reacexp(25) = "CO + O (+M) <=> CO2 (+M)"
    reacexp(26) = "CO + O2 <=> CO2 + O"
    reacexp(27) = "CO + OH <=> CO2 + H"
    reacexp(28) = "CO + OH <=> CO2 + H"
    reacexp(29) = "CO + HO2 <=> CO2 + OH"
    reacexp(30) = "HCO + M <=> CO + H + M"
    reacexp(31) = "HCO + O2 <=> CO + HO2"
    reacexp(32) = "H + HCO <=> CO + H2"
    reacexp(33) = "HCO + O <=> CO + OH"
    reacexp(34) = "HCO + O <=> CO2 + H"
    reacexp(35) = "HCO + OH <=> CO + H2O"
    reacexp(36) = "HCO + HO2 => CO2 + H + OH"
    reacexp(37) = "2 HCO => 2 CO + H2"
    reacexp(38) = "CH3 + HCO <=> CH4 + CO"
    reacexp(39) = "CH2O + O2 <=> HCO + HO2"
    reacexp(40) = "2 HCO <=> CH2O + CO"
    reacexp(41) = "H + HCO (+M) <=> CH2O (+M)"
    reacexp(42) = "CO + H2 (+M) <=> CH2O (+M)"
    reacexp(43) = "CH2O + OH <=> H2O + HCO"
    reacexp(44) = "CH2O + H <=> H2 + HCO"
    reacexp(45) = "CH2O + O <=> HCO + OH"
    reacexp(46) = "CH2O + CH3 <=> CH4 + HCO"
    reacexp(47) = "CH2O + HO2 <=> H2O2 + HCO"
    reacexp(48) = "CH3O (+M) <=> CH2O + H (+M)"
    reacexp(49) = "CH3O + O2 <=> CH2O + HO2"
    reacexp(50) = "CH2O + CH3O <=> CH3OH + HCO"
    reacexp(51) = "CH3 + CH3OH <=> CH3O + CH4"
    reacexp(52) = "CH3 + CH3O <=> CH2O + CH4"
    reacexp(53) = "CH3O + H <=> CH2O + H2"
    reacexp(54) = "CH3O + HO2 <=> CH2O + H2O2"
    reacexp(55) = "CH2O + H (+M) <=> CH2OH (+M)"
    reacexp(56) = "CH2OH + O2 <=> CH2O + HO2"
    reacexp(57) = "CH2OH + O2 <=> CH2O + HO2"
    reacexp(58) = "CH2OH + H <=> CH2O + H2"
    reacexp(59) = "CH2OH + HO2 <=> CH2O + H2O2"
    reacexp(60) = "CH2OH + HCO <=> 2 CH2O"
    reacexp(61) = "CH2OH + CH3O <=> CH2O + CH3OH"
    reacexp(62) = "CH3OH + HCO <=> CH2O + CH2OH"
    reacexp(63) = "CH2OH + OH <=> CH2O + H2O"
    reacexp(64) = "CH2OH + O <=> CH2O + OH"
    reacexp(65) = "2 CH2OH <=> CH2O + CH3OH"
    reacexp(66) = "CH3OH (+M) <=> CH3 + OH (+M)"
    reacexp(67) = "CH3OH (+M) <=> CH2(S) + H2O (+M)"
    reacexp(68) = "CH3OH (+M) <=> CH2OH + H (+M)"
    reacexp(69) = "CH3OH + H <=> CH2OH + H2"
    reacexp(70) = "CH3OH + H <=> CH3O + H2"
    reacexp(71) = "CH3OH + O <=> CH2OH + OH"
    reacexp(72) = "CH3OH + OH <=> CH2OH + H2O"
    reacexp(73) = "CH3OH + OH <=> CH3O + H2O"
    reacexp(74) = "CH3OH + O2 <=> CH2OH + HO2"
    reacexp(75) = "CH3OH + HO2 <=> CH2OH + H2O2"
    reacexp(76) = "CH3 + CH3OH <=> CH2OH + CH4"
    reacexp(77) = "CH3O + CH3OH <=> CH2OH + CH3OH"
    reacexp(78) = "2 CH3O <=> CH2O + CH3OH"
    reacexp(79) = "CH3 + H (+M) <=> CH4 (+M)"
    reacexp(80) = "CH4 + H <=> CH3 + H2"
    reacexp(81) = "CH4 + OH <=> CH3 + H2O"
    reacexp(82) = "CH4 + O <=> CH3 + OH"
    reacexp(83) = "CH4 + HO2 <=> CH3 + H2O2"
    reacexp(84) = "CH2 + CH4 <=> 2 CH3"
    reacexp(85) = "CH3 + OH <=> CH2(S) + H2O"
    reacexp(86) = "CH3 + OH <=> CH2O + H2"
    reacexp(87) = "CH3 + OH <=> CH2OH + H"
    reacexp(88) = "CH3 + OH <=> CH3O + H"
    reacexp(89) = "CH3 + HO2 <=> CH3O + OH"
    reacexp(90) = "CH3 + HO2 <=> CH4 + O2"
    reacexp(91) = "CH3 + O <=> CH2O + H"
    reacexp(92) = "CH3 + O2 <=> CH3O + O"
    reacexp(93) = "CH3 + O2 <=> CH2O + OH"
    reacexp(94) = "CH3 + O2 (+M) <=> CH3O2 (+M)"
    reacexp(95) = "CH2O + CH3O2 <=> CH3O2H + HCO"
    reacexp(96) = "CH3O2 + CH4 <=> CH3 + CH3O2H"
    reacexp(97) = "CH3O2 + CH3OH <=> CH2OH + CH3O2H"
    reacexp(98) = "CH3 + CH3O2 <=> 2 CH3O"
    reacexp(99) = "CH3O2 + HO2 <=> CH3O2H + O2"
    reacexp(100) = "2 CH3O2 => CH2O + CH3OH + O2"
    reacexp(101) = "2 CH3O2 => 2 CH3O + O2"
    reacexp(102) = "CH3O2 + H <=> CH3O + OH"
    reacexp(103) = "CH3O2 + O <=> CH3O + O2"
    reacexp(104) = "CH3O2 + OH <=> CH3OH + O2"
    reacexp(105) = "CH3O2H <=> CH3O + OH"
    reacexp(106) = "CH2(S) + N2 <=> CH2 + N2"
    reacexp(107) = "CH2(S) + O <=> CO + H2"
    reacexp(108) = "CH2(S) + O <=> H + HCO"
    reacexp(109) = "CH2(S) + OH <=> CH2O + H"
    reacexp(110) = "CH2(S) + H2 <=> CH3 + H"
    reacexp(111) = "CH2(S) + O2 => CO + H + OH"
    reacexp(112) = "CH2(S) + O2 <=> CO + H2O"
    reacexp(113) = "CH2(S) + H2O <=> CH2 + H2O"
    reacexp(114) = "CH2(S) + CO <=> CH2 + CO"
    reacexp(115) = "CH2(S) + CO2 <=> CH2 + CO2"
    reacexp(116) = "CH2(S) + CO2 <=> CH2O + CO"
    reacexp(117) = "CH2 + H (+M) <=> CH3 (+M)"
    reacexp(118) = "CH2 + O2 <=> HCO + OH"
    reacexp(119) = "CH2 + O2 => CO2 + 2 H"
    reacexp(120) = "CH2 + O => CO + 2 H"
    reacexp(121) = "C + OH <=> CO + H"
    reacexp(122) = "C + O2 <=> CO + O"
    reacexp(123) = "2 CH3 (+M) <=> C2H6 (+M)"
    reacexp(124) = "C2H5 + H (+M) <=> C2H6 (+M)"
    reacexp(125) = "C2H6 + H <=> C2H5 + H2"
    reacexp(126) = "C2H6 + O <=> C2H5 + OH"
    reacexp(127) = "C2H6 + OH <=> C2H5 + H2O"
    reacexp(128) = "C2H6 + O2 <=> C2H5 + HO2"
    reacexp(129) = "C2H6 + CH3 <=> C2H5 + CH4"
    reacexp(130) = "C2H6 + HO2 <=> C2H5 + H2O2"
    reacexp(131) = "C2H6 + CH3O2 <=> C2H5 + CH3O2H"
    reacexp(132) = "C2H6 + CH3O <=> C2H5 + CH3OH"
    reacexp(133) = "C2H6 + CH2(S) <=> C2H5 + CH3"
    reacexp(134) = "C2H4 + H (+M) <=> C2H5 (+M)"
    reacexp(135) = "CH3O2 + H2 <=> CH3O2H + H"
    reacexp(136) = "2 C2H4 <=> C2H3 + C2H5"
    reacexp(137) = "C2H5 + CH3 <=> C2H4 + CH4"
    reacexp(138) = "2 CH3 <=> C2H5 + H"
    reacexp(139) = "C2H5 + H <=> C2H4 + H2"
    reacexp(140) = "C2H5 + O2 <=> C2H4 + HO2"
    reacexp(141) = "C2H5 + O2 <=> C2H4 + HO2"
    reacexp(142) = "HCCO + OH => 2 CO + H2"
    reacexp(143) = "HCCO + O => 2 CO + H"
    reacexp(144) = "H + HCCO <=> CH2(S) + CO"
    reacexp(145) = "HCCO + O2 => 2 CO + OH"
    reacexp(146) = "HCCO + O2 => CO + CO2 + H"
    reacexp(147) = "C2H3 + H (+M) <=> C2H4 (+M)"
    reacexp(148) = "C2H4 + H <=> C2H3 + H2"
    reacexp(149) = "C2H4 + O <=> CH3 + HCO"
    reacexp(150) = "C2H4 + OH <=> C2H3 + H2O"
    reacexp(151) = "C2H4 + OH <=> CH2O + CH3"
    reacexp(152) = "C2H4 + CH3 <=> C2H3 + CH4"
    reacexp(153) = "C2H4 + O2 <=> C2H3 + HO2"
    reacexp(154) = "C2H4 + CH3O <=> C2H3 + CH3OH"
    reacexp(155) = "C2H4 + CH3O2 <=> C2H3 + CH3O2H"
    reacexp(156) = "CH2(S) + CH3 <=> C2H4 + H"
    reacexp(157) = "C2H3 + O2 <=> CH2O + HCO"
    reacexp(158) = "C2H3 + O2 => CH2O + CO + H"
    reacexp(159) = "reverse of H + O2 <=> O + OH"
    reacexp(160) = "reverse of H2 + O <=> H + OH"
    reacexp(161) = "reverse of H2 + OH <=> H + H2O"
    reacexp(162) = "reverse of H2O + O <=> 2 OH"
    reacexp(163) = "reverse of H2 + M <=> 2 H + M"
    reacexp(164) = "reverse of 2 O + M <=> O2 + M"
    reacexp(165) = "reverse of H + O + M <=> OH + M"
    reacexp(166) = "reverse of H + OH + M <=> H2O + M"
    reacexp(167) = "reverse of H + O2 (+M) <=> HO2 (+M)"
    reacexp(168) = "reverse of H + O2 (+M) <=> HO2 (+M)"
    reacexp(169) = "reverse of H + O2 (+M) <=> HO2 (+M)"
    reacexp(170) = "reverse of H + HO2 <=> 2 OH"
    reacexp(171) = "reverse of H2 + O2 <=> H + HO2"
    reacexp(172) = "reverse of HO2 + O <=> O2 + OH"
    reacexp(173) = "reverse of HO2 + OH <=> H2O + O2"
    reacexp(174) = "reverse of 2 HO2 <=> H2O2 + O2"
    reacexp(175) = "reverse of 2 HO2 <=> H2O2 + O2"
    reacexp(176) = "reverse of H2O2 (+H2O) <=> 2 OH (+H2O)"
    reacexp(177) = "reverse of H2O2 (+M) <=> 2 OH (+M)"
    reacexp(178) = "reverse of H + H2O2 <=> H2O + OH"
    reacexp(179) = "reverse of H + H2O2 <=> H2 + HO2"
    reacexp(180) = "reverse of H2O2 + O <=> HO2 + OH"
    reacexp(181) = "reverse of H2O2 + OH <=> H2O + HO2"
    reacexp(182) = "reverse of H2O2 + OH <=> H2O + HO2"
    reacexp(183) = "reverse of CO + O (+M) <=> CO2 (+M)"
    reacexp(184) = "reverse of CO + O2 <=> CO2 + O"
    reacexp(185) = "reverse of CO + OH <=> CO2 + H"
    reacexp(186) = "reverse of CO + OH <=> CO2 + H"
    reacexp(187) = "reverse of CO + HO2 <=> CO2 + OH"
    reacexp(188) = "reverse of HCO + M <=> CO + H + M"
    reacexp(189) = "reverse of HCO + O2 <=> CO + HO2"
    reacexp(190) = "reverse of H + HCO <=> CO + H2"
    reacexp(191) = "reverse of HCO + O <=> CO + OH"
    reacexp(192) = "reverse of HCO + O <=> CO2 + H"
    reacexp(193) = "reverse of HCO + OH <=> CO + H2O"
    reacexp(194) = "reverse of CH3 + HCO <=> CH4 + CO"
    reacexp(195) = "reverse of CH2O + O2 <=> HCO + HO2"
    reacexp(196) = "reverse of 2 HCO <=> CH2O + CO"
    reacexp(197) = "reverse of H + HCO (+M) <=> CH2O (+M)"
    reacexp(198) = "reverse of CO + H2 (+M) <=> CH2O (+M)"
    reacexp(199) = "reverse of CH2O + OH <=> H2O + HCO"
    reacexp(200) = "reverse of CH2O + H <=> H2 + HCO"
    reacexp(201) = "reverse of CH2O + O <=> HCO + OH"
    reacexp(202) = "reverse of CH2O + CH3 <=> CH4 + HCO"
    reacexp(203) = "reverse of CH2O + HO2 <=> H2O2 + HCO"
    reacexp(204) = "reverse of CH3O (+M) <=> CH2O + H (+M)"
    reacexp(205) = "reverse of CH3O + O2 <=> CH2O + HO2"
    reacexp(206) = "reverse of CH2O + CH3O <=> CH3OH + HCO"
    reacexp(207) = "reverse of CH3 + CH3OH <=> CH3O + CH4"
    reacexp(208) = "reverse of CH3 + CH3O <=> CH2O + CH4"
    reacexp(209) = "reverse of CH3O + H <=> CH2O + H2"
    reacexp(210) = "reverse of CH3O + HO2 <=> CH2O + H2O2"
    reacexp(211) = "reverse of CH2O + H (+M) <=> CH2OH (+M)"
    reacexp(212) = "reverse of CH2OH + O2 <=> CH2O + HO2"
    reacexp(213) = "reverse of CH2OH + O2 <=> CH2O + HO2"
    reacexp(214) = "reverse of CH2OH + H <=> CH2O + H2"
    reacexp(215) = "reverse of CH2OH + HO2 <=> CH2O + H2O2"
    reacexp(216) = "reverse of CH2OH + HCO <=> 2 CH2O"
    reacexp(217) = "reverse of CH2OH + CH3O <=> CH2O + CH3OH"
    reacexp(218) = "reverse of CH3OH + HCO <=> CH2O + CH2OH"
    reacexp(219) = "reverse of CH2OH + OH <=> CH2O + H2O"
    reacexp(220) = "reverse of CH2OH + O <=> CH2O + OH"
    reacexp(221) = "reverse of 2 CH2OH <=> CH2O + CH3OH"
    reacexp(222) = "reverse of CH3OH (+M) <=> CH3 + OH (+M)"
    reacexp(223) = "reverse of CH3OH (+M) <=> CH2(S) + H2O (+M)"
    reacexp(224) = "reverse of CH3OH (+M) <=> CH2OH + H (+M)"
    reacexp(225) = "reverse of CH3OH + H <=> CH2OH + H2"
    reacexp(226) = "reverse of CH3OH + H <=> CH3O + H2"
    reacexp(227) = "reverse of CH3OH + O <=> CH2OH + OH"
    reacexp(228) = "reverse of CH3OH + OH <=> CH2OH + H2O"
    reacexp(229) = "reverse of CH3OH + OH <=> CH3O + H2O"
    reacexp(230) = "reverse of CH3OH + O2 <=> CH2OH + HO2"
    reacexp(231) = "reverse of CH3OH + HO2 <=> CH2OH + H2O2"
    reacexp(232) = "reverse of CH3 + CH3OH <=> CH2OH + CH4"
    reacexp(233) = "reverse of CH3O + CH3OH <=> CH2OH + CH3OH"
    reacexp(234) = "reverse of 2 CH3O <=> CH2O + CH3OH"
    reacexp(235) = "reverse of CH3 + H (+M) <=> CH4 (+M)"
    reacexp(236) = "reverse of CH4 + H <=> CH3 + H2"
    reacexp(237) = "reverse of CH4 + OH <=> CH3 + H2O"
    reacexp(238) = "reverse of CH4 + O <=> CH3 + OH"
    reacexp(239) = "reverse of CH4 + HO2 <=> CH3 + H2O2"
    reacexp(240) = "reverse of CH2 + CH4 <=> 2 CH3"
    reacexp(241) = "reverse of CH3 + OH <=> CH2(S) + H2O"
    reacexp(242) = "reverse of CH3 + OH <=> CH2O + H2"
    reacexp(243) = "reverse of CH3 + OH <=> CH2OH + H"
    reacexp(244) = "reverse of CH3 + OH <=> CH3O + H"
    reacexp(245) = "reverse of CH3 + HO2 <=> CH3O + OH"
    reacexp(246) = "reverse of CH3 + HO2 <=> CH4 + O2"
    reacexp(247) = "reverse of CH3 + O <=> CH2O + H"
    reacexp(248) = "reverse of CH3 + O2 <=> CH3O + O"
    reacexp(249) = "reverse of CH3 + O2 <=> CH2O + OH"
    reacexp(250) = "reverse of CH3 + O2 (+M) <=> CH3O2 (+M)"
    reacexp(251) = "reverse of CH2O + CH3O2 <=> CH3O2H + HCO"
    reacexp(252) = "reverse of CH3O2 + CH4 <=> CH3 + CH3O2H"
    reacexp(253) = "reverse of CH3O2 + CH3OH <=> CH2OH + CH3O2H"
    reacexp(254) = "reverse of CH3 + CH3O2 <=> 2 CH3O"
    reacexp(255) = "reverse of CH3O2 + HO2 <=> CH3O2H + O2"
    reacexp(256) = "reverse of CH3O2 + H <=> CH3O + OH"
    reacexp(257) = "reverse of CH3O2 + O <=> CH3O + O2"
    reacexp(258) = "reverse of CH3O2 + OH <=> CH3OH + O2"
    reacexp(259) = "reverse of CH3O2H <=> CH3O + OH"
    reacexp(260) = "reverse of CH2(S) + N2 <=> CH2 + N2"
    reacexp(261) = "reverse of CH2(S) + O <=> CO + H2"
    reacexp(262) = "reverse of CH2(S) + O <=> H + HCO"
    reacexp(263) = "reverse of CH2(S) + OH <=> CH2O + H"
    reacexp(264) = "reverse of CH2(S) + H2 <=> CH3 + H"
    reacexp(265) = "reverse of CH2(S) + O2 <=> CO + H2O"
    reacexp(266) = "reverse of CH2(S) + H2O <=> CH2 + H2O"
    reacexp(267) = "reverse of CH2(S) + CO <=> CH2 + CO"
    reacexp(268) = "reverse of CH2(S) + CO2 <=> CH2 + CO2"
    reacexp(269) = "reverse of CH2(S) + CO2 <=> CH2O + CO"
    reacexp(270) = "reverse of CH2 + H (+M) <=> CH3 (+M)"
    reacexp(271) = "reverse of CH2 + O2 <=> HCO + OH"
    reacexp(272) = "reverse of C + OH <=> CO + H"
    reacexp(273) = "reverse of C + O2 <=> CO + O"
    reacexp(274) = "reverse of 2 CH3 (+M) <=> C2H6 (+M)"
    reacexp(275) = "reverse of C2H5 + H (+M) <=> C2H6 (+M)"
    reacexp(276) = "reverse of C2H6 + H <=> C2H5 + H2"
    reacexp(277) = "reverse of C2H6 + O <=> C2H5 + OH"
    reacexp(278) = "reverse of C2H6 + OH <=> C2H5 + H2O"
    reacexp(279) = "reverse of C2H6 + O2 <=> C2H5 + HO2"
    reacexp(280) = "reverse of C2H6 + CH3 <=> C2H5 + CH4"
    reacexp(281) = "reverse of C2H6 + HO2 <=> C2H5 + H2O2"
    reacexp(282) = "reverse of C2H6 + CH3O2 <=> C2H5 + CH3O2H"
    reacexp(283) = "reverse of C2H6 + CH3O <=> C2H5 + CH3OH"
    reacexp(284) = "reverse of C2H6 + CH2(S) <=> C2H5 + CH3"
    reacexp(285) = "reverse of C2H4 + H (+M) <=> C2H5 (+M)"
    reacexp(286) = "reverse of CH3O2 + H2 <=> CH3O2H + H"
    reacexp(287) = "reverse of 2 C2H4 <=> C2H3 + C2H5"
    reacexp(288) = "reverse of C2H5 + CH3 <=> C2H4 + CH4"
    reacexp(289) = "reverse of 2 CH3 <=> C2H5 + H"
    reacexp(290) = "reverse of C2H5 + H <=> C2H4 + H2"
    reacexp(291) = "reverse of C2H5 + O2 <=> C2H4 + HO2"
    reacexp(292) = "reverse of C2H5 + O2 <=> C2H4 + HO2"
    reacexp(293) = "reverse of H + HCCO <=> CH2(S) + CO"
    reacexp(294) = "reverse of C2H3 + H (+M) <=> C2H4 (+M)"
    reacexp(295) = "reverse of C2H4 + H <=> C2H3 + H2"
    reacexp(296) = "reverse of C2H4 + O <=> CH3 + HCO"
    reacexp(297) = "reverse of C2H4 + OH <=> C2H3 + H2O"
    reacexp(298) = "reverse of C2H4 + OH <=> CH2O + CH3"
    reacexp(299) = "reverse of C2H4 + CH3 <=> C2H3 + CH4"
    reacexp(300) = "reverse of C2H4 + O2 <=> C2H3 + HO2"
    reacexp(301) = "reverse of C2H4 + CH3O <=> C2H3 + CH3OH"
    reacexp(302) = "reverse of C2H4 + CH3O2 <=> C2H3 + CH3O2H"
    reacexp(303) = "reverse of CH2(S) + CH3 <=> C2H4 + H"
    reacexp(304) = "reverse of C2H3 + O2 <=> CH2O + HCO"

  end subroutine reaction_expressions

  ! ----------------------------------------------- !
  ! Subroutine for pressure dependent coefficients  !
  ! ----------------------------------------------- !
  real(pr) function getlindratecoeff(Tloc,k0,kinf,fc,concin,Ploc)
    implicit none

    real(pr) ::  Tloc,k0,kinf,fc,redP,Ploc
    real(pr) :: ntmp,ccoeff,dcoeff,lgknull
    real(pr) :: f
    real(pr) :: conc, concin

    if (concin.gt.0.0_pr) then
       conc = concin
    else
       conc = Ploc / ( Rcst * Tloc )
    end if
    
    redP = abs(k0) * conc / max(abs(kinf), tiny(1.0_pr)) + tiny(1.0_pr)

    ntmp = 0.75_pr - 1.27_pr * log10( fc )
    ccoeff = - 0.4_pr - 0.67_pr * log10( fc )
    dcoeff = 0.14_pr
    lgknull = log10(redP)
    f = (lgknull+ccoeff)/(ntmp-dcoeff*(lgknull+ccoeff))
    f = fc**(1.0_pr / ( f * f + 1.0_pr ))
    
    getlindratecoeff = kinf * f * redP / ( 1.0_pr + redP )

  end function getlindratecoeff

  ! ----------------------------------------------- !
  ! Evaluate thirdbodies                            !
  ! ----------------------------------------------- !
  subroutine get_thirdbodies(M,c)
    implicit none

    real(pr), dimension(nspec) :: c
    real(pr), dimension(nTB + nFO) :: M

    M(mM5) = (1.000000e+00_pr)*c(sCH4) &
         + (2.800000e+00_pr)*c(sCO2) &
         + (1.500000e+00_pr)*c(sH2) &
         + (1.100000e+01_pr)*c(sH2O) &
         + sum(c)

    M(mM6) = (1.000000e+00_pr)*c(sCH4) &
         + (2.800000e+00_pr)*c(sCO2) &
         + (1.500000e+00_pr)*c(sH2) &
         + (1.100000e+01_pr)*c(sH2O) &
         + sum(c)

    M(mM7) = (1.000000e+00_pr)*c(sCH4) &
         + (1.000000e+00_pr)*c(sCO2) &
         + (1.500000e+00_pr)*c(sH2) &
         + (1.100000e+01_pr)*c(sH2O) &
         + sum(c)

    M(mM8) = (1.000000e+00_pr)*c(sCH4) &
         + (-2.700000e-01_pr)*c(sH2) &
         + (2.650000e+00_pr)*c(sH2O) &
         + sum(c)

    M(mM30) = (1.000000e+00_pr)*c(sCH4) &
         + (1.000000e+00_pr)*c(sCO2) &
         + (1.000000e+00_pr)*c(sH2) &
         + (1.100000e+01_pr)*c(sH2O) &
         + sum(c)

    M(mM9) = (1.000000e+00_pr)*c(sCH4) &
         + (2.800000e+00_pr)*c(sCO2) &
         + (3.000000e-01_pr)*c(sH2) &
         + (9.000000e+00_pr)*c(sH2O) &
         + sum(c)

    M(mM10) = sum(c)

    M(mM11) = sum(c)

    M(mM18) = c(sH2O)

    M(mM19) = (6.000000e-01_pr)*c(sCO2) &
         + (2.700000e+00_pr)*c(sH2) &
         + (-1.000000e+00_pr)*c(sH2O) &
         + (5.000000e-01_pr)*c(sN2) &
         + (2.000000e-01_pr)*c(sO2) &
         + sum(c)

    M(mM25) = (2.600000e+00_pr)*c(sCO2) &
         + (1.000000e+00_pr)*c(sH2) &
         + (1.100000e+01_pr)*c(sH2O) &
         + sum(c)

    M(mM41) = (1.000000e+00_pr)*c(sCH4) &
         + (1.000000e+00_pr)*c(sCO2) &
         + (1.000000e+00_pr)*c(sH2) &
         + (5.000000e+00_pr)*c(sH2O) &
         + sum(c)

    M(mM42) = (1.000000e+00_pr)*c(sCH4) &
         + (1.000000e+00_pr)*c(sCO2) &
         + (1.000000e+00_pr)*c(sH2) &
         + (5.000000e+00_pr)*c(sH2O) &
         + sum(c)

    M(mM48) = (1.000000e+00_pr)*c(sCH4) &
         + (1.000000e+00_pr)*c(sCO2) &
         + (1.000000e+00_pr)*c(sH2) &
         + (5.000000e+00_pr)*c(sH2O) &
         + sum(c)

    M(mM55) = (1.000000e+00_pr)*c(sCH4) &
         + (1.000000e+00_pr)*c(sCO2) &
         + (1.000000e+00_pr)*c(sH2) &
         + (5.000000e+00_pr)*c(sH2O) &
         + sum(c)

    M(mM66) = sum(c)

    M(mM67) = sum(c)

    M(mM68) = sum(c)

    M(mM79) = (1.000000e+00_pr)*c(sCH4) &
         + (1.000000e+00_pr)*c(sCO2) &
         + (1.000000e+00_pr)*c(sH2) &
         + (5.000000e+00_pr)*c(sH2O) &
         + sum(c)

    M(mM94) = sum(c)

    M(mM117) = (1.000000e+00_pr)*c(sCH4) &
         + (1.000000e+00_pr)*c(sCO2) &
         + (1.000000e+00_pr)*c(sH2) &
         + (5.000000e+00_pr)*c(sH2O) &
         + sum(c)

    M(mM123) = (2.000000e+00_pr)*c(sCO2) &
         + (4.000000e+00_pr)*c(sH2O) &
         + sum(c)

    M(mM124) = (1.000000e+00_pr)*c(sCH4) &
         + (1.000000e+00_pr)*c(sCO2) &
         + (1.000000e+00_pr)*c(sH2) &
         + (5.000000e+00_pr)*c(sH2O) &
         + sum(c)

    M(mM134) = (1.000000e+00_pr)*c(sCH4) &
         + (1.000000e+00_pr)*c(sCO2) &
         + (1.000000e+00_pr)*c(sH2) &
         + (5.000000e+00_pr)*c(sH2O) &
         + sum(c)

    M(mM147) = (1.000000e+00_pr)*c(sCH4) &
         + (1.000000e+00_pr)*c(sCO2) &
         + (1.000000e+00_pr)*c(sH2) &
         + (5.000000e+00_pr)*c(sH2O) &
         + sum(c)

  end subroutine get_thirdbodies
  
  ! ----------------------------------------------- !
  ! Evaluate rate coefficients                      !
  ! ----------------------------------------------- !
  subroutine get_rate_coefficients(k,M,Tloc,Ploc)
    implicit none

    real(pr), dimension(nreac + nreac_reverse) :: k
    real(pr), dimension(nFO + nFO_reverse) :: k_0
    real(pr), dimension(nFO + nFO_reverse) :: k_inf
    real(pr), dimension(nFO + nFO_reverse) :: FC
    real(pr), dimension(nTB + nFO) :: M
    real(pr) :: Tloc,Ploc,R_T_inv,T_log,redP

    ! Rate coefficients
    R_T_inv = 1.0_pr/(Rcst*Tloc)
    T_log = log(Tloc)

    k(r1f) = (1.040000e+08_pr)*exp((-6.395662e+04_pr)*R_T_inv )
    k(r2f) = (5.080000e-02_pr)*exp((-2.632573e+04_pr)*R_T_inv + (2.670000e+00_pr)*T_log )
    k(r3f) = (4.380000e+07_pr)*exp((-2.924616e+04_pr)*R_T_inv )
    k(r4f) = (2.970000e+00_pr)*exp((-5.606560e+04_pr)*R_T_inv + (2.020000e+00_pr)*T_log )
    k(r5f) = (4.577000e+13_pr)*exp((-4.368096e+05_pr)*R_T_inv + (-1.400000e+00_pr)*T_log )
    k(r6f) = (6.165000e+03_pr)*exp((-5.000000e-01_pr)*T_log )
    k(r7f) = (4.714000e+06_pr)*exp((-1.000000e+00_pr)*T_log )
    k(r8f) = (3.500000e+10_pr)*exp((-2.000000e+00_pr)*T_log )
    k_0(FOr9f) =(1.737000e+07_pr)*exp((-1.230000e+00_pr)*T_log )
    k_inf(FOr9f) =(4.650000e+06_pr)*exp((4.400000e-01_pr)*T_log )
    FC(FOr9f) = ((1.0_pr - 6.700000e-01_pr)*exp(-Tloc/(1.000000e-30_pr)) + (6.700000e-01_pr)*exp(-Tloc/(1.000000e+30_pr)))&
              + exp(-(1.000000e+30_pr)/Tloc)
    k(r9f) = getlindratecoeff(Tloc, k_0(FOr9f), k_inf(FOr9f),FC(FOr9f), M(mM9),Ploc)
    k_0(FOr10f) =(6.810000e+06_pr)*exp((-1.200000e+00_pr)*T_log )
    k_inf(FOr10f) =(4.650000e+06_pr)*exp((4.400000e-01_pr)*T_log )
    FC(FOr10f) = ((1.0_pr - 7.000000e-01_pr)*exp(-Tloc/(1.000000e-30_pr)) + (7.000000e-01_pr)*exp(-Tloc/(1.000000e+30_pr)))&
              + exp(-(1.000000e+30_pr)/Tloc)
    k(r10f) = getlindratecoeff(Tloc, k_0(FOr10f), k_inf(FOr10f),FC(FOr10f), M(mM10),Ploc)
    k_0(FOr11f) =(9.192000e+06_pr)*exp((-1.200000e+00_pr)*T_log )
    k_inf(FOr11f) =(4.650000e+06_pr)*exp((4.400000e-01_pr)*T_log )
    FC(FOr11f) = ((1.0_pr - 5.900000e-01_pr)*exp(-Tloc/(1.000000e-30_pr)) + (5.900000e-01_pr)*exp(-Tloc/(1.000000e+30_pr)))&
              + exp(-(1.000000e+30_pr)/Tloc)
    k(r11f) = getlindratecoeff(Tloc, k_0(FOr11f), k_inf(FOr11f),FC(FOr11f), M(mM11),Ploc)
    k(r12f) = (7.079000e+07_pr)*exp((-1.234280e+03_pr)*R_T_inv )
    k(r13f) = (5.176000e-01_pr)*exp((-2.238524e+05_pr)*R_T_inv + (2.433000e+00_pr)*T_log )
    k(r14f) = (3.250000e+07_pr)
    k(r15f) = (2.456000e+07_pr)*exp((2.079448e+03_pr)*R_T_inv )
    k(r16f) = (1.300000e+05_pr)*exp((6.819920e+03_pr)*R_T_inv )
    k(r17f) = (3.658000e+08_pr)*exp((-5.020800e+04_pr)*R_T_inv )
    k_0(FOr18f) =(1.865000e+19_pr)*exp((-2.039658e+05_pr)*R_T_inv + (-2.300000e+00_pr)*T_log )
    k_inf(FOr18f) =(2.000000e+12_pr)*exp((-2.039658e+05_pr)*R_T_inv + (9.000000e-01_pr)*T_log )
    FC(FOr18f) = ((1.0_pr - 5.100000e-01_pr)*exp(-Tloc/(1.000000e-30_pr)) + (5.100000e-01_pr)*exp(-Tloc/(1.000000e+30_pr)))
    k(r18f) = getlindratecoeff(Tloc, k_0(FOr18f), k_inf(FOr18f),FC(FOr18f), M(mM18),Ploc)
    k_0(FOr19f) =(2.490000e+18_pr)*exp((-2.039658e+05_pr)*R_T_inv + (-2.300000e+00_pr)*T_log )
    k_inf(FOr19f) =(2.000000e+12_pr)*exp((-2.039658e+05_pr)*R_T_inv + (9.000000e-01_pr)*T_log )
    FC(FOr19f) = ((1.0_pr - 4.300000e-01_pr)*exp(-Tloc/(1.000000e-30_pr)) + (4.300000e-01_pr)*exp(-Tloc/(1.000000e+30_pr)))
    k(r19f) = getlindratecoeff(Tloc, k_0(FOr19f), k_inf(FOr19f),FC(FOr19f), M(mM19),Ploc)
    k(r20f) = (2.410000e+07_pr)*exp((-1.661048e+04_pr)*R_T_inv )
    k(r21f) = (2.150000e+04_pr)*exp((-2.510400e+04_pr)*R_T_inv + (1.000000e+00_pr)*T_log )
    k(r22f) = (9.550000e+00_pr)*exp((-1.661048e+04_pr)*R_T_inv + (2.000000e+00_pr)*T_log )
    k(r23f) = (1.740000e+06_pr)*exp((-1.330512e+03_pr)*R_T_inv )
    k(r24f) = (7.590000e+07_pr)*exp((-3.041350e+04_pr)*R_T_inv )
    k_0(FOr25f) =(1.173000e+12_pr)*exp((-1.753514e+04_pr)*R_T_inv + (-2.790000e+00_pr)*T_log )
    k_inf(FOr25f) =(1.362000e+04_pr)*exp((-9.974656e+03_pr)*R_T_inv )
    redP = abs(k_0(FOr25f)) * M(mM25) / max(abs(k_inf(FOr25f)), tiny(1.0_pr)) + tiny(1.0_pr)
    k(r25f) = k_inf(FOr25f) * redP / ( 1.0_pr + redP )
    k(r26f) = (1.119000e+06_pr)*exp((-1.995768e+05_pr)*R_T_inv )
    k(r27f) = (7.015000e-02_pr)*exp((1.488249e+03_pr)*R_T_inv + (2.053000e+00_pr)*T_log )
    k(r28f) = (5.757000e+06_pr)*exp((-1.388251e+03_pr)*R_T_inv + (-6.640000e-01_pr)*T_log )
    k(r29f) = (1.570000e-01_pr)*exp((-7.506096e+04_pr)*R_T_inv + (2.180000e+00_pr)*T_log )
    k(r30f) = (5.700000e+05_pr)*exp((-6.221608e+04_pr)*R_T_inv + (6.600000e-01_pr)*T_log )
    k(r31f) = (7.580000e+06_pr)*exp((-1.715440e+03_pr)*R_T_inv )
    k(r32f) = (7.340000e+07_pr)
    k(r33f) = (3.020000e+07_pr)
    k(r34f) = (3.000000e+07_pr)
    k(r35f) = (1.020000e+08_pr)
    k(r36f) = (3.000000e+07_pr)
    k(r37f) = (3.000000e+06_pr)
    k(r38f) = (2.650000e+07_pr)
    k(r39f) = (8.070000e+09_pr)*exp((-2.235093e+05_pr)*R_T_inv )
    k(r40f) = (1.800000e+07_pr)
    k_0(FOr41f) =(1.350000e+12_pr)*exp((-5.962200e+03_pr)*R_T_inv + (-2.570000e+00_pr)*T_log )
    k_inf(FOr41f) =(1.090000e+06_pr)*exp((1.087840e+03_pr)*R_T_inv + (4.800000e-01_pr)*T_log )
    FC(FOr41f) = ((1.0_pr - 7.824000e-01_pr)*exp(-Tloc/(2.710000e+02_pr)) + (7.824000e-01_pr)*exp(-Tloc/(2.755000e+03_pr)))&
              + exp(-(6.570000e+03_pr)/Tloc)
    k(r41f) = getlindratecoeff(Tloc, k_0(FOr41f), k_inf(FOr41f),FC(FOr41f), M(mM41),Ploc)
    k_0(FOr42f) =(5.070000e+15_pr)*exp((-3.529120e+05_pr)*R_T_inv + (-3.420000e+00_pr)*T_log )
    k_inf(FOr42f) =(4.300000e+01_pr)*exp((-3.330464e+05_pr)*R_T_inv + (1.500000e+00_pr)*T_log )
    FC(FOr42f) = ((1.0_pr - 9.320000e-01_pr)*exp(-Tloc/(1.970000e+02_pr)) + (9.320000e-01_pr)*exp(-Tloc/(1.540000e+03_pr)))&
              + exp(-(1.030000e+04_pr)/Tloc)
    k(r42f) = getlindratecoeff(Tloc, k_0(FOr42f), k_inf(FOr42f),FC(FOr42f), M(mM42),Ploc)
    k(r43f) = (7.820000e+01_pr)*exp((4.414120e+03_pr)*R_T_inv + (1.630000e+00_pr)*T_log )
    k(r44f) = (5.740000e+01_pr)*exp((-1.146416e+04_pr)*R_T_inv + (1.900000e+00_pr)*T_log )
    k(r45f) = (6.260000e+03_pr)*exp((-9.455840e+03_pr)*R_T_inv + (1.150000e+00_pr)*T_log )
    k(r46f) = (3.830000e-05_pr)*exp((-1.804141e+04_pr)*R_T_inv + (3.360000e+00_pr)*T_log )
    k(r47f) = (1.880000e-02_pr)*exp((-4.819968e+04_pr)*R_T_inv + (2.700000e+00_pr)*T_log )
    k_0(FOr48f) =(1.867000e+19_pr)*exp((-1.017005e+05_pr)*R_T_inv + (-3.000000e+00_pr)*T_log )
    k_inf(FOr48f) =(6.800000e+13_pr)*exp((-1.094953e+05_pr)*R_T_inv )
    FC(FOr48f) = ((1.0_pr - 9.000000e-01_pr)*exp(-Tloc/(2.500000e+03_pr)) + (9.000000e-01_pr)*exp(-Tloc/(1.300000e+03_pr)))&
              + exp(-(1.000000e+99_pr)/Tloc)
    k(r48f) = getlindratecoeff(Tloc, k_0(FOr48f), k_inf(FOr48f),FC(FOr48f), M(mM48),Ploc)
    k(r49f) = (4.380000e-25_pr)*exp((2.301618e+04_pr)*R_T_inv + (9.500000e+00_pr)*T_log )
    k(r50f) = (6.620000e+05_pr)*exp((-9.598096e+03_pr)*R_T_inv )
    k(r51f) = (1.440000e-05_pr)*exp((-2.901604e+04_pr)*R_T_inv + (3.100000e+00_pr)*T_log )
    k(r52f) = (1.200000e+07_pr)
    k(r53f) = (2.000000e+07_pr)
    k(r54f) = (3.010000e+05_pr)
    k_0(FOr55f) =(1.270000e+20_pr)*exp((-2.732152e+04_pr)*R_T_inv + (-4.820000e+00_pr)*T_log )
    k_inf(FOr55f) =(5.400000e+05_pr)*exp((-1.506240e+04_pr)*R_T_inv + (4.540000e-01_pr)*T_log )
    FC(FOr55f) = ((1.0_pr - 7.187000e-01_pr)*exp(-Tloc/(1.030000e+02_pr)) + (7.187000e-01_pr)*exp(-Tloc/(1.291000e+03_pr)))&
              + exp(-(4.160000e+03_pr)/Tloc)
    k(r55f) = getlindratecoeff(Tloc, k_0(FOr55f), k_inf(FOr55f),FC(FOr55f), M(mM55),Ploc)
    k(r56f) = (1.510000e+09_pr)*exp((-1.000000e+00_pr)*T_log )
    k(r57f) = (2.410000e+08_pr)*exp((-2.099113e+04_pr)*R_T_inv )
    k(r58f) = (6.000000e+06_pr)
    k(r59f) = (1.200000e+07_pr)
    k(r60f) = (1.800000e+08_pr)
    k(r61f) = (2.400000e+07_pr)
    k(r62f) = (9.630000e-03_pr)*exp((-5.485224e+04_pr)*R_T_inv + (2.900000e+00_pr)*T_log )
    k(r63f) = (2.400000e+07_pr)
    k(r64f) = (4.200000e+07_pr)
    k(r65f) = (3.000000e+06_pr)
    k_0(FOr66f) =(1.500000e+37_pr)*exp((-4.099994e+05_pr)*R_T_inv + (-6.995000e+00_pr)*T_log )
    k_inf(FOr66f) =(2.084000e+18_pr)*exp((-3.871899e+05_pr)*R_T_inv + (-6.150000e-01_pr)*T_log )
    FC(FOr66f) = ((1.0_pr - -4.748000e-01_pr)*exp(-Tloc/(3.558000e+04_pr)) + (-4.748000e-01_pr)*exp(-Tloc/(1.116000e+03_pr)))&
              + exp(-(9.023000e+03_pr)/Tloc)
    k(r66f) = getlindratecoeff(Tloc, k_0(FOr66f), k_inf(FOr66f),FC(FOr66f), M(mM66),Ploc)
    k_0(FOr67f) =(1.430000e+41_pr)*exp((-4.159611e+05_pr)*R_T_inv + (-8.227000e+00_pr)*T_log )
    k_inf(FOr67f) =(3.121000e+18_pr)*exp((-3.837230e+05_pr)*R_T_inv + (-1.017000e+00_pr)*T_log )
    FC(FOr67f) = ((1.0_pr - 2.545000e+00_pr)*exp(-Tloc/(3.290000e+03_pr)) + (2.545000e+00_pr)*exp(-Tloc/(4.732000e+04_pr)))&
              + exp(-(4.711000e+04_pr)/Tloc)
    k(r67f) = getlindratecoeff(Tloc, k_0(FOr67f), k_inf(FOr67f),FC(FOr67f), M(mM67),Ploc)
    k_0(FOr68f) =(3.390000e+36_pr)*exp((-4.402836e+05_pr)*R_T_inv + (-7.244000e+00_pr)*T_log )
    k_inf(FOr68f) =(7.896000e-03_pr)*exp((-3.534116e+05_pr)*R_T_inv + (5.038000e+00_pr)*T_log )
    FC(FOr68f) = ((1.0_pr - -7.391000e+01_pr)*exp(-Tloc/(3.705000e+04_pr)) + (-7.391000e+01_pr)*exp(-Tloc/(4.150000e+04_pr)))&
              + exp(-(5.220000e+03_pr)/Tloc)
    k(r68f) = getlindratecoeff(Tloc, k_0(FOr68f), k_inf(FOr68f),FC(FOr68f), M(mM68),Ploc)
    k(r69f) = (3.070000e-01_pr)*exp((-2.276096e+04_pr)*R_T_inv + (2.550000e+00_pr)*T_log )
    k(r70f) = (1.990000e-01_pr)*exp((-4.309520e+04_pr)*R_T_inv + (2.560000e+00_pr)*T_log )
    k(r71f) = (3.880000e-01_pr)*exp((-1.288672e+04_pr)*R_T_inv + (2.500000e+00_pr)*T_log )
    k(r72f) = (3.080000e-02_pr)*exp((3.375233e+03_pr)*R_T_inv + (2.650000e+00_pr)*T_log )
    k(r73f) = (1.500000e-04_pr)*exp((3.192392e+03_pr)*R_T_inv + (3.030000e+00_pr)*T_log )
    k(r74f) = (2.050000e+07_pr)*exp((-1.878616e+05_pr)*R_T_inv )
    k(r75f) = (1.080000e-02_pr)*exp((-4.405752e+04_pr)*R_T_inv + (2.550000e+00_pr)*T_log )
    k(r76f) = (3.190000e-05_pr)*exp((-3.000765e+04_pr)*R_T_inv + (3.170000e+00_pr)*T_log )
    k(r77f) = (3.000000e+05_pr)*exp((-1.704562e+04_pr)*R_T_inv )
    k(r78f) = (6.030000e+07_pr)
    k_0(FOr79f) =(2.477000e+21_pr)*exp((-1.020896e+04_pr)*R_T_inv + (-4.760000e+00_pr)*T_log )
    k_inf(FOr79f) =(1.270000e+10_pr)*exp((-1.602472e+03_pr)*R_T_inv + (-6.300000e-01_pr)*T_log )
    FC(FOr79f) = ((1.0_pr - 7.830000e-01_pr)*exp(-Tloc/(7.400000e+01_pr)) + (7.830000e-01_pr)*exp(-Tloc/(2.941000e+03_pr)))&
              + exp(-(6.964000e+03_pr)/Tloc)
    k(r79f) = getlindratecoeff(Tloc, k_0(FOr79f), k_inf(FOr79f),FC(FOr79f), M(mM79),Ploc)
    k(r80f) = (6.140000e-01_pr)*exp((-4.011201e+04_pr)*R_T_inv + (2.500000e+00_pr)*T_log )
    k(r81f) = (5.830000e-02_pr)*exp((-9.162960e+03_pr)*R_T_inv + (2.600000e+00_pr)*T_log )
    k(r82f) = (1.020000e+03_pr)*exp((-3.598240e+04_pr)*R_T_inv + (1.500000e+00_pr)*T_log )
    k(r83f) = (1.695000e-05_pr)*exp((-8.790584e+04_pr)*R_T_inv + (3.740000e+00_pr)*T_log )
    k(r84f) = (2.460000e+00_pr)*exp((-3.460168e+04_pr)*R_T_inv + (2.000000e+00_pr)*T_log )
    k(r85f) = (5.282000e+11_pr)*exp((-7.414048e+03_pr)*R_T_inv + (-1.518000e+00_pr)*T_log )
    k(r86f) = (1.650000e+01_pr)*exp((8.409840e+03_pr)*R_T_inv + (9.730000e-01_pr)*T_log )
    k(r87f) = (4.686000e+04_pr)*exp((-1.492014e+04_pr)*R_T_inv + (8.330000e-01_pr)*T_log )
    k(r88f) = (1.230000e+03_pr)*exp((-4.999880e+04_pr)*R_T_inv + (1.011000e+00_pr)*T_log )
    k(r89f) = (1.000000e+06_pr)*exp((2.876500e+03_pr)*R_T_inv + (2.690000e-01_pr)*T_log )
    k(r90f) = (1.160000e-01_pr)*exp((1.264405e+04_pr)*R_T_inv + (2.230000e+00_pr)*T_log )
    k(r91f) = (5.540000e+07_pr)*exp((5.690240e+02_pr)*R_T_inv + (5.000000e-02_pr)*T_log )
    k(r92f) = (7.546000e+06_pr)*exp((-1.184909e+05_pr)*R_T_inv )
    k(r93f) = (2.641000e-06_pr)*exp((-3.391132e+04_pr)*R_T_inv + (3.283000e+00_pr)*T_log )
    k_0(FOr94f) =(6.850000e+12_pr)*exp((-3.000000e+00_pr)*T_log )
    k_inf(FOr94f) =(7.812000e+03_pr)*exp((9.000000e-01_pr)*T_log )
    FC(FOr94f) = ((1.0_pr - 6.000000e-01_pr)*exp(-Tloc/(1.000000e+03_pr)) + (6.000000e-01_pr)*exp(-Tloc/(7.000000e+01_pr)))&
              + exp(-(1.700000e+03_pr)/Tloc)
    k(r94f) = getlindratecoeff(Tloc, k_0(FOr94f), k_inf(FOr94f),FC(FOr94f), M(mM94),Ploc)
    k(r95f) = (1.990000e+06_pr)*exp((-4.878544e+04_pr)*R_T_inv )
    k(r96f) = (9.600000e-07_pr)*exp((-7.451704e+04_pr)*R_T_inv + (3.770000e+00_pr)*T_log )
    k(r97f) = (1.810000e+06_pr)*exp((-5.736264e+04_pr)*R_T_inv )
    k(r98f) = (5.080000e+06_pr)*exp((5.903624e+03_pr)*R_T_inv )
    k(r99f) = (2.470000e+05_pr)*exp((6.568880e+03_pr)*R_T_inv )
    k(r100f) = (3.110000e+08_pr)*exp((4.397384e+03_pr)*R_T_inv + (-1.610000e+00_pr)*T_log )
    k(r101f) = (1.400000e+10_pr)*exp((-7.782240e+03_pr)*R_T_inv + (-1.610000e+00_pr)*T_log )
    k(r102f) = (9.600000e+07_pr)
    k(r103f) = (3.600000e+07_pr)
    k(r104f) = (6.000000e+07_pr)
    k(r105f) = (6.310000e+14_pr)*exp((-1.769832e+05_pr)*R_T_inv )
    k(r106f) = (1.500000e+07_pr)*exp((-2.510400e+03_pr)*R_T_inv )
    k(r107f) = (1.500000e+07_pr)
    k(r108f) = (1.500000e+07_pr)
    k(r109f) = (3.000000e+07_pr)
    k(r110f) = (7.000000e+07_pr)
    k(r111f) = (2.800000e+07_pr)
    k(r112f) = (1.200000e+07_pr)
    k(r113f) = (3.000000e+07_pr)
    k(r114f) = (9.000000e+06_pr)
    k(r115f) = (7.000000e+06_pr)
    k(r116f) = (1.400000e+07_pr)
    k_0(FOr117f) =(3.200000e+15_pr)*exp((-5.146320e+03_pr)*R_T_inv + (-3.140000e+00_pr)*T_log )
    k_inf(FOr117f) =(2.500000e+10_pr)*exp((-8.000000e-01_pr)*T_log )
    FC(FOr117f) = ((1.0_pr - 6.800000e-01_pr)*exp(-Tloc/(7.800000e+01_pr)) + (6.800000e-01_pr)*exp(-Tloc/(1.995000e+03_pr)))&
              + exp(-(5.590000e+03_pr)/Tloc)
    k(r117f) = getlindratecoeff(Tloc, k_0(FOr117f), k_inf(FOr117f),FC(FOr117f), M(mM117),Ploc)
    k(r118f) = (1.060000e+07_pr)*exp((-6.276000e+03_pr)*R_T_inv )
    k(r119f) = (2.640000e+06_pr)*exp((-6.276000e+03_pr)*R_T_inv )
    k(r120f) = (5.000000e+07_pr)
    k(r121f) = (5.000000e+07_pr)
    k(r122f) = (5.000000e+07_pr)
    k_0(FOr123f) =(8.054000e+19_pr)*exp((-4.107014e+03_pr)*R_T_inv + (-3.750000e+00_pr)*T_log )
    k_inf(FOr123f) =(2.277000e+09_pr)*exp((-7.317816e+02_pr)*R_T_inv + (-6.900000e-01_pr)*T_log )
    FC(FOr123f) = ((1.0_pr - 0.000000e+00_pr)*exp(-Tloc/(5.700000e+02_pr)) + (0.000000e+00_pr)*exp(-Tloc/(1.000000e+30_pr)))&
              + exp(-(1.000000e+30_pr)/Tloc)
    k(r123f) = getlindratecoeff(Tloc, k_0(FOr123f), k_inf(FOr123f),FC(FOr123f), M(mM123),Ploc)
    k_0(FOr124f) =(1.990000e+29_pr)*exp((-2.797004e+04_pr)*R_T_inv + (-7.080000e+00_pr)*T_log )
    k_inf(FOr124f) =(5.210000e+11_pr)*exp((-6.610720e+03_pr)*R_T_inv + (-9.900000e-01_pr)*T_log )
    FC(FOr124f) = ((1.0_pr - 8.420000e-01_pr)*exp(-Tloc/(1.250000e+02_pr)) + (8.420000e-01_pr)*exp(-Tloc/(2.219000e+03_pr)))&
              + exp(-(6.882000e+03_pr)/Tloc)
    k(r124f) = getlindratecoeff(Tloc, k_0(FOr124f), k_inf(FOr124f),FC(FOr124f), M(mM124),Ploc)
    k(r125f) = (1.150000e+02_pr)*exp((-3.150552e+04_pr)*R_T_inv + (1.900000e+00_pr)*T_log )
    k(r126f) = (3.550000e+00_pr)*exp((-2.439272e+04_pr)*R_T_inv + (2.400000e+00_pr)*T_log )
    k(r127f) = (1.480000e+01_pr)*exp((-3.974800e+03_pr)*R_T_inv + (1.900000e+00_pr)*T_log )
    k(r128f) = (6.030000e+07_pr)*exp((-2.170241e+05_pr)*R_T_inv )
    k(r129f) = (5.480000e-07_pr)*exp((-3.464352e+04_pr)*R_T_inv + (4.000000e+00_pr)*T_log )
    k(r130f) = (3.460000e-05_pr)*exp((-7.079328e+04_pr)*R_T_inv + (3.610000e+00_pr)*T_log )
    k(r131f) = (1.940000e-05_pr)*exp((-7.154640e+04_pr)*R_T_inv + (3.640000e+00_pr)*T_log )
    k(r132f) = (2.410000e+05_pr)*exp((-2.966456e+04_pr)*R_T_inv )
    k(r133f) = (1.200000e+08_pr)
    k_0(FOr134f) =(1.419000e+27_pr)*exp((-2.413750e+04_pr)*R_T_inv + (-6.642000e+00_pr)*T_log )
    k_inf(FOr134f) =(9.569000e+02_pr)*exp((-5.669320e+03_pr)*R_T_inv + (1.463000e+00_pr)*T_log )
    FC(FOr134f) = ((1.0_pr - -5.690000e-01_pr)*exp(-Tloc/(2.990000e+02_pr)) + (-5.690000e-01_pr)*exp(-Tloc/(-9.147000e+03_pr)))&
              + exp(-(1.524000e+02_pr)/Tloc)
    k(r134f) = getlindratecoeff(Tloc, k_0(FOr134f), k_inf(FOr134f),FC(FOr134f), M(mM134),Ploc)
    k(r135f) = (1.500000e+08_pr)*exp((-1.089095e+05_pr)*R_T_inv )
    k(r136f) = (4.820000e+08_pr)*exp((-2.992815e+05_pr)*R_T_inv )
    k(r137f) = (1.180000e-02_pr)*exp((1.222146e+04_pr)*R_T_inv + (2.450000e+00_pr)*T_log )
    k(r138f) = (3.100000e+08_pr)*exp((-5.595054e+04_pr)*R_T_inv + (-3.620000e-01_pr)*T_log )
    k(r139f) = (2.000000e+06_pr)
    k(r140f) = (1.843000e+01_pr)*exp((3.014990e+03_pr)*R_T_inv + (1.130000e+00_pr)*T_log )
    k(r141f) = (6.609000e-06_pr)*exp((-5.924544e+04_pr)*R_T_inv + (3.510000e+00_pr)*T_log )
    k(r142f) = (1.000000e+08_pr)
    k(r143f) = (8.000000e+07_pr)
    k(r144f) = (1.000000e+08_pr)
    k(r145f) = (1.910000e+05_pr)*exp((-4.267680e+03_pr)*R_T_inv + (-2.000000e-02_pr)*T_log )
    k(r146f) = (4.780000e+06_pr)*exp((-4.811600e+03_pr)*R_T_inv + (-1.420000e-01_pr)*T_log )
    k_0(FOr147f) =(1.400000e+18_pr)*exp((-1.389088e+04_pr)*R_T_inv + (-3.860000e+00_pr)*T_log )
    k_inf(FOr147f) =(6.080000e+06_pr)*exp((-1.171520e+03_pr)*R_T_inv + (2.700000e-01_pr)*T_log )
    FC(FOr147f) = ((1.0_pr - 7.820000e-01_pr)*exp(-Tloc/(2.075000e+02_pr)) + (7.820000e-01_pr)*exp(-Tloc/(2.663000e+03_pr)))&
              + exp(-(6.095000e+03_pr)/Tloc)
    k(r147f) = getlindratecoeff(Tloc, k_0(FOr147f), k_inf(FOr147f),FC(FOr147f), M(mM147),Ploc)
    k(r148f) = (5.070000e+01_pr)*exp((-5.418280e+04_pr)*R_T_inv + (1.930000e+00_pr)*T_log )
    k(r149f) = (7.453000e+00_pr)*exp((-7.656720e+02_pr)*R_T_inv + (1.880000e+00_pr)*T_log )
    k(r150f) = (2.230000e-02_pr)*exp((-9.269652e+03_pr)*R_T_inv + (2.745000e+00_pr)*T_log )
    k(r151f) = (1.780000e-01_pr)*exp((-8.621132e+03_pr)*R_T_inv + (1.680000e+00_pr)*T_log )
    k(r152f) = (6.620000e-06_pr)*exp((-3.974800e+04_pr)*R_T_inv + (3.700000e+00_pr)*T_log )
    k(r153f) = (4.220000e+07_pr)*exp((-2.410951e+05_pr)*R_T_inv )
    k(r154f) = (1.200000e+05_pr)*exp((-2.824200e+04_pr)*R_T_inv )
    k(r155f) = (8.590000e-06_pr)*exp((-1.135203e+05_pr)*R_T_inv + (3.754000e+00_pr)*T_log )
    k(r156f) = (2.000000e+07_pr)
    k(r157f) = (1.700000e+23_pr)*exp((-2.720897e+04_pr)*R_T_inv + (-5.312000e+00_pr)*T_log )
    k(r158f) = (5.190000e+09_pr)*exp((-1.385992e+04_pr)*R_T_inv + (-1.260000e+00_pr)*T_log )
    k(r1b) = (4.615442e+05_pr)*exp((5.835146e+03_pr)*R_T_inv + (3.353172e-01_pr)*T_log )
    k(r2b) = (2.536907e-02_pr)*exp((-2.030601e+04_pr)*R_T_inv + (2.656775e+00_pr)*T_log )
    k(r3b) = (1.592922e+08_pr)*exp((-9.088480e+04_pr)*R_T_inv + (3.374882e-02_pr)*T_log )
    k(r4b) = (4.078279e-01_pr)*exp((1.159275e+04_pr)*R_T_inv + (1.973026e+00_pr)*T_log )
    k(r5b) = (2.608371e+08_pr)*exp((-4.068153e+03_pr)*R_T_inv + (-1.784421e+00_pr)*T_log )
    k(r6b) = (1.217322e+11_pr)*exp((-4.965135e+05_pr)*R_T_inv + (-4.641211e-01_pr)*T_log )
    k(r7b) = (4.130875e+11_pr)*exp((-4.267217e+05_pr)*R_T_inv + (-6.288039e-01_pr)*T_log )
    k(r8b) = (2.233572e+16_pr)*exp((-4.943801e+05_pr)*R_T_inv + (-1.581830e+00_pr)*T_log )
    k_0(FOr9b) =(7.529529e+12_pr)*exp((-2.036382e+05_pr)*R_T_inv + (-1.093623e+00_pr)*T_log )
    k_inf(FOr9b) =(2.015677e+12_pr)*exp((-2.036382e+05_pr)*R_T_inv + (5.763768e-01_pr)*T_log )
    FC(FOr9b) = ((1.0_pr - 6.700000e-01_pr)*exp(-Tloc/(1.000000e-30_pr)) + (6.700000e-01_pr)*exp(-Tloc/(1.000000e+30_pr)))&
              + exp(-(1.000000e+30_pr)/Tloc)
    k(r9b) = getlindratecoeff(Tloc, k_0(FOr9b), k_inf(FOr9b),FC(FOr9b), M(mM9),Ploc)
    k_0(FOr10b) =(2.951991e+12_pr)*exp((-2.036382e+05_pr)*R_T_inv + (-1.063623e+00_pr)*T_log )
    k_inf(FOr10b) =(2.015677e+12_pr)*exp((-2.036382e+05_pr)*R_T_inv + (5.763768e-01_pr)*T_log )
    FC(FOr10b) = ((1.0_pr - 7.000000e-01_pr)*exp(-Tloc/(1.000000e-30_pr)) + (7.000000e-01_pr)*exp(-Tloc/(1.000000e+30_pr)))&
              + exp(-(1.000000e+30_pr)/Tloc)
    k(r10b) = getlindratecoeff(Tloc, k_0(FOr10b), k_inf(FOr10b),FC(FOr10b), M(mM10),Ploc)
    k_0(FOr11b) =(3.984538e+12_pr)*exp((-2.036382e+05_pr)*R_T_inv + (-1.063623e+00_pr)*T_log )
    k_inf(FOr11b) =(2.015677e+12_pr)*exp((-2.036382e+05_pr)*R_T_inv + (5.763768e-01_pr)*T_log )
    FC(FOr11b) = ((1.0_pr - 5.900000e-01_pr)*exp(-Tloc/(1.000000e-30_pr)) + (5.900000e-01_pr)*exp(-Tloc/(1.000000e+30_pr)))&
              + exp(-(1.000000e+30_pr)/Tloc)
    k(r11b) = getlindratecoeff(Tloc, k_0(FOr11b), k_inf(FOr11b),FC(FOr11b), M(mM11),Ploc)
    k(r12b) = (6.350915e+04_pr)*exp((-1.545260e+05_pr)*R_T_inv + (5.701365e-01_pr)*T_log )
    k(r13b) = (1.278647e+00_pr)*exp((5.250853e+03_pr)*R_T_inv + (2.184956e+00_pr)*T_log )
    k(r14b) = (6.570037e+06_pr)*exp((-2.230835e+05_pr)*R_T_inv + (2.348193e-01_pr)*T_log )
    k(r15b) = (3.615699e+07_pr)*exp((-2.886624e+05_pr)*R_T_inv + (2.817931e-01_pr)*T_log )
    k(r16b) = (5.967381e+06_pr)*exp((-1.542237e+05_pr)*R_T_inv + (-2.398911e-01_pr)*T_log )
    k(r17b) = (1.679129e+10_pr)*exp((-2.112516e+05_pr)*R_T_inv + (-2.398911e-01_pr)*T_log )
    k_0(FOr18b) =(8.408816e+08_pr)*exp((7.424250e+03_pr)*R_T_inv + (-1.626349e+00_pr)*T_log )
    k_inf(FOr18b) =(9.017497e+01_pr)*exp((7.424250e+03_pr)*R_T_inv + (1.573651e+00_pr)*T_log )
    FC(FOr18b) = ((1.0_pr - 5.100000e-01_pr)*exp(-Tloc/(1.000000e-30_pr)) + (5.100000e-01_pr)*exp(-Tloc/(1.000000e+30_pr)))
    k(r18b) = getlindratecoeff(Tloc, k_0(FOr18b), k_inf(FOr18b),FC(FOr18b), M(mM18),Ploc)
    k_0(FOr19b) =(1.122678e+08_pr)*exp((7.424250e+03_pr)*R_T_inv + (-1.626349e+00_pr)*T_log )
    k_inf(FOr19b) =(9.017497e+01_pr)*exp((7.424250e+03_pr)*R_T_inv + (1.573651e+00_pr)*T_log )
    FC(FOr19b) = ((1.0_pr - 4.300000e-01_pr)*exp(-Tloc/(1.000000e-30_pr)) + (4.300000e-01_pr)*exp(-Tloc/(1.000000e+30_pr)))
    k(r19b) = getlindratecoeff(Tloc, k_0(FOr19b), k_inf(FOr19b),FC(FOr19b), M(mM19),Ploc)
    k(r20b) = (6.934337e+02_pr)*exp((-2.996005e+05_pr)*R_T_inv + (1.091821e+00_pr)*T_log )
    k(r21b) = (1.896014e+02_pr)*exp((-9.316365e+04_pr)*R_T_inv + (1.487935e+00_pr)*T_log )
    k(r22b) = (4.205788e-02_pr)*exp((-7.865041e+04_pr)*R_T_inv + (2.474710e+00_pr)*T_log )
    k(r23b) = (5.580495e+04_pr)*exp((-1.310288e+05_pr)*R_T_inv + (5.216842e-01_pr)*T_log )
    k(r24b) = (2.434251e+06_pr)*exp((-1.601118e+05_pr)*R_T_inv + (5.216842e-01_pr)*T_log )
    k_0(FOr25b) =(1.295503e+23_pr)*exp((-5.502659e+05_pr)*R_T_inv + (-3.511699e+00_pr)*T_log )
    k_inf(FOr25b) =(1.504241e+15_pr)*exp((-5.427054e+05_pr)*R_T_inv + (-7.216986e-01_pr)*T_log )
    redP = abs(k_0(FOr25b)) * M(mM25) / max(abs(k_inf(FOr25b)), tiny(1.0_pr)) + tiny(1.0_pr)
    k(r25b) = k_inf(FOr25b) * redP / ( 1.0_pr + redP )
    k(r26b) = (6.258900e+09_pr)*exp((-2.357941e+05_pr)*R_T_inv + (-7.575775e-01_pr)*T_log )
    k(r27b) = (8.841290e+04_pr)*exp((-1.045208e+05_pr)*R_T_inv + (9.601053e-01_pr)*T_log )
    k(r28b) = (7.255782e+12_pr)*exp((-1.073973e+05_pr)*R_T_inv + (-1.756895e+00_pr)*T_log )
    k(r29b) = (1.775219e+02_pr)*exp((-3.343617e+05_pr)*R_T_inv + (1.657242e+00_pr)*T_log )
    k(r30b) = (3.453160e-01_pr)*exp((1.763634e+03_pr)*R_T_inv + (7.554170e-01_pr)*T_log )
    k(r31b) = (1.990577e+06_pr)*exp((-1.413740e+05_pr)*R_T_inv + (2.317938e-01_pr)*T_log )
    k(r32b) = (7.802780e+06_pr)*exp((-3.687617e+05_pr)*R_T_inv + (4.798380e-01_pr)*T_log )
    k(r33b) = (1.603250e+06_pr)*exp((-3.627420e+05_pr)*R_T_inv + (4.666131e-01_pr)*T_log )
    k(r34b) = (2.007259e+12_pr)*exp((-4.687510e+05_pr)*R_T_inv + (-6.262816e-01_pr)*T_log )
    k(r35b) = (3.943428e+07_pr)*exp((-4.304004e+05_pr)*R_T_inv + (5.135869e-01_pr)*T_log )
    k(r38b) = (1.753251e+08_pr)*exp((-3.741021e+05_pr)*R_T_inv + (3.808988e-01_pr)*T_log )
    k(r39b) = (5.430642e+08_pr)*exp((-5.959748e+04_pr)*R_T_inv + (-1.544625e-01_pr)*T_log )
    k(r40b) = (7.024326e+07_pr)*exp((-3.035703e+05_pr)*R_T_inv + (3.862563e-01_pr)*T_log )
    k_0(FOr41b) =(8.696092e+18_pr)*exp((-3.735122e+05_pr)*R_T_inv + (-2.279161e+00_pr)*T_log )
    k_inf(FOr41b) =(7.021289e+12_pr)*exp((-3.664622e+05_pr)*R_T_inv + (7.708393e-01_pr)*T_log )
    FC(FOr41b) = ((1.0_pr - 7.824000e-01_pr)*exp(-Tloc/(2.710000e+02_pr)) + (7.824000e-01_pr)*exp(-Tloc/(2.755000e+03_pr)))&
              + exp(-(6.570000e+03_pr)/Tloc)
    k(r41b) = getlindratecoeff(Tloc, k_0(FOr41b), k_inf(FOr41b),FC(FOr41b), M(mM41),Ploc)
    k_0(FOr42b) =(3.072168e+23_pr)*exp((-3.517003e+05_pr)*R_T_inv + (-3.608999e+00_pr)*T_log )
    k_inf(FOr42b) =(2.605587e+09_pr)*exp((-3.318347e+05_pr)*R_T_inv + (1.311001e+00_pr)*T_log )
    FC(FOr42b) = ((1.0_pr - 9.320000e-01_pr)*exp(-Tloc/(1.970000e+02_pr)) + (9.320000e-01_pr)*exp(-Tloc/(1.540000e+03_pr)))&
              + exp(-(1.030000e+04_pr)/Tloc)
    k(r42b) = getlindratecoeff(Tloc, k_0(FOr42b), k_inf(FOr42b),FC(FOr42b), M(mM42),Ploc)
    k(r43b) = (7.747263e+00_pr)*exp((-1.224159e+05_pr)*R_T_inv + (1.757331e+00_pr)*T_log )
    k(r44b) = (1.563627e+00_pr)*exp((-7.665558e+04_pr)*R_T_inv + (1.993582e+00_pr)*T_log )
    k(r45b) = (8.516015e+01_pr)*exp((-6.862754e+04_pr)*R_T_inv + (1.230357e+00_pr)*T_log )
    k(r46b) = (6.493291e-05_pr)*exp((-8.857319e+04_pr)*R_T_inv + (3.354642e+00_pr)*T_log )
    k(r47b) = (5.807322e-02_pr)*exp((-4.533145e+04_pr)*R_T_inv + (2.305646e+00_pr)*T_log )
    k_0(FOr48b) =(5.898269e+10_pr)*exp((-1.349203e+04_pr)*R_T_inv + (-2.326917e+00_pr)*T_log )
    k_inf(FOr48b) =(2.148271e+05_pr)*exp((-2.128682e+04_pr)*R_T_inv + (6.730833e-01_pr)*T_log )
    FC(FOr48b) = ((1.0_pr - 9.000000e-01_pr)*exp(-Tloc/(2.500000e+03_pr)) + (9.000000e-01_pr)*exp(-Tloc/(1.300000e+03_pr)))&
              + exp(-(1.000000e+99_pr)/Tloc)
    k(r48b) = getlindratecoeff(Tloc, k_0(FOr48b), k_inf(FOr48b),FC(FOr48b), M(mM48),Ploc)
    k(r49b) = (5.998219e-28_pr)*exp((-9.241359e+04_pr)*R_T_inv + (1.030946e+01_pr)*T_log )
    k(r50b) = (2.378781e+03_pr)*exp((-7.821268e+04_pr)*R_T_inv + (6.039181e-01_pr)*T_log )
    k(r51b) = (6.794103e-03_pr)*exp((-3.093324e+04_pr)*R_T_inv + (2.490724e+00_pr)*T_log )
    k(r52b) = (4.140168e+05_pr)*exp((-3.498734e+05_pr)*R_T_inv + (9.585651e-01_pr)*T_log )
    k(r53b) = (1.108720e+04_pr)*exp((-3.445330e+05_pr)*R_T_inv + (1.057504e+00_pr)*T_log )
    k(r54b) = (1.892148e+04_pr)*exp((-2.764733e+05_pr)*R_T_inv + (5.695690e-01_pr)*T_log )
    k_0(FOr55b) =(1.031007e+27_pr)*exp((-1.517569e+05_pr)*R_T_inv + (-5.175852e+00_pr)*T_log )
    k_inf(FOr55b) =(4.383811e+12_pr)*exp((-1.394978e+05_pr)*R_T_inv + (9.814762e-02_pr)*T_log )
    FC(FOr55b) = ((1.0_pr - 7.187000e-01_pr)*exp(-Tloc/(1.030000e+02_pr)) + (7.187000e-01_pr)*exp(-Tloc/(1.291000e+03_pr)))&
              + exp(-(4.160000e+03_pr)/Tloc)
    k(r55b) = getlindratecoeff(Tloc, k_0(FOr55b), k_inf(FOr55b),FC(FOr55b), M(mM55),Ploc)
    k(r56b) = (8.062818e+07_pr)*exp((-7.920284e+04_pr)*R_T_inv + (-5.077709e-01_pr)*T_log )
    k(r57b) = (1.286847e+07_pr)*exp((-1.001940e+05_pr)*R_T_inv + (4.922291e-01_pr)*T_log )
    k(r58b) = (1.296895e+05_pr)*exp((-3.083061e+05_pr)*R_T_inv + (7.402734e-01_pr)*T_log )
    k(r59b) = (2.941248e+07_pr)*exp((-2.402464e+05_pr)*R_T_inv + (2.523380e-01_pr)*T_log )
    k(r60b) = (1.428252e+08_pr)*exp((-2.431146e+05_pr)*R_T_inv + (6.466917e-01_pr)*T_log )
    k(r61b) = (6.842896e+04_pr)*exp((-3.117292e+05_pr)*R_T_inv + (1.250610e+00_pr)*T_log )
    k(r62b) = (6.873344e-02_pr)*exp((-2.246458e+04_pr)*R_T_inv + (2.613313e+00_pr)*T_log )
    k(r63b) = (1.886623e+06_pr)*exp((-3.699447e+05_pr)*R_T_inv + (7.740222e-01_pr)*T_log )
    k(r64b) = (4.533605e+05_pr)*exp((-3.022863e+05_pr)*R_T_inv + (7.270485e-01_pr)*T_log )
    k(r65b) = (3.335122e+05_pr)*exp((-2.755023e+05_pr)*R_T_inv + (9.333789e-01_pr)*T_log )
    k_0(FOr66b) =(4.857833e+27_pr)*exp((-2.434159e+04_pr)*R_T_inv + (-6.730355e+00_pr)*T_log )
    k_inf(FOr66b) =(6.749149e+08_pr)*exp((-1.532094e+03_pr)*R_T_inv + (-3.503550e-01_pr)*T_log )
    FC(FOr66b) = ((1.0_pr - -4.748000e-01_pr)*exp(-Tloc/(3.558000e+04_pr)) + (-4.748000e-01_pr)*exp(-Tloc/(1.116000e+03_pr)))&
              + exp(-(9.023000e+03_pr)/Tloc)
    k(r66b) = getlindratecoeff(Tloc, k_0(FOr66b), k_inf(FOr66b),FC(FOr66b), M(mM66),Ploc)
    k_0(FOr67b) =(2.271301e+30_pr)*exp((-2.601946e+04_pr)*R_T_inv + (-7.530502e+00_pr)*T_log )
    k_inf(FOr67b) =(4.957155e+07_pr)*exp((6.218682e+03_pr)*R_T_inv + (-3.205022e-01_pr)*T_log )
    FC(FOr67b) = ((1.0_pr - 2.545000e+00_pr)*exp(-Tloc/(3.290000e+03_pr)) + (2.545000e+00_pr)*exp(-Tloc/(4.732000e+04_pr)))&
              + exp(-(4.711000e+04_pr)/Tloc)
    k(r67b) = getlindratecoeff(Tloc, k_0(FOr67b), k_inf(FOr67b),FC(FOr67b), M(mM67),Ploc)
    k_0(FOr68b) =(3.756222e+30_pr)*exp((-4.034589e+04_pr)*R_T_inv + (-7.821526e+00_pr)*T_log )
    k_inf(FOr68b) =(8.749005e-09_pr)*exp((4.652608e+04_pr)*R_T_inv + (4.460474e+00_pr)*T_log )
    FC(FOr68b) = ((1.0_pr - -7.391000e+01_pr)*exp(-Tloc/(3.705000e+04_pr)) + (-7.391000e+01_pr)*exp(-Tloc/(4.150000e+04_pr)))&
              + exp(-(5.220000e+03_pr)/Tloc)
    k(r68b) = getlindratecoeff(Tloc, k_0(FOr68b), k_inf(FOr68b),FC(FOr68b), M(mM68),Ploc)
    k(r69b) = (5.968997e-02_pr)*exp((-5.556472e+04_pr)*R_T_inv + (2.356895e+00_pr)*T_log )
    k(r70b) = (1.508611e+00_pr)*exp((-3.967203e+04_pr)*R_T_inv + (2.049664e+00_pr)*T_log )
    k(r71b) = (3.767347e-02_pr)*exp((-3.967077e+04_pr)*R_T_inv + (2.293670e+00_pr)*T_log )
    k(r72b) = (2.177881e-02_pr)*exp((-9.106717e+04_pr)*R_T_inv + (2.490643e+00_pr)*T_log )
    k(r73b) = (4.135579e-03_pr)*exp((-5.502308e+04_pr)*R_T_inv + (2.553412e+00_pr)*T_log )
    k(r74b) = (9.846306e+06_pr)*exp((8.437859e+03_pr)*R_T_inv + (-4.411497e-01_pr)*T_log )
    k(r75b) = (2.381133e-01_pr)*exp((-8.801635e+03_pr)*R_T_inv + (1.868959e+00_pr)*T_log )
    k(r76b) = (3.860101e-04_pr)*exp((-6.815178e+04_pr)*R_T_inv + (2.877955e+00_pr)*T_log )
    k(r77b) = (7.694131e+03_pr)*exp((-5.327255e+04_pr)*R_T_inv + (3.172309e-01_pr)*T_log )
    k(r78b) = (4.409449e+03_pr)*exp((-3.479562e+05_pr)*R_T_inv + (1.567841e+00_pr)*T_log )
    k_0(FOr79b) =(2.705095e+28_pr)*exp((-4.482908e+05_pr)*R_T_inv + (-4.474518e+00_pr)*T_log )
    k_inf(FOr79b) =(1.386947e+17_pr)*exp((-4.396843e+05_pr)*R_T_inv + (-3.445182e-01_pr)*T_log )
    FC(FOr79b) = ((1.0_pr - 7.830000e-01_pr)*exp(-Tloc/(7.400000e+01_pr)) + (7.830000e-01_pr)*exp(-Tloc/(2.941000e+03_pr)))&
              + exp(-(6.964000e+03_pr)/Tloc)
    k(r79b) = getlindratecoeff(Tloc, k_0(FOr79b), k_inf(FOr79b),FC(FOr79b), M(mM79),Ploc)
    k(r80b) = (9.865598e-03_pr)*exp((-3.477164e+04_pr)*R_T_inv + (2.598939e+00_pr)*T_log )
    k(r81b) = (3.406779e-03_pr)*exp((-6.546123e+04_pr)*R_T_inv + (2.732688e+00_pr)*T_log )
    k(r82b) = (8.184576e+00_pr)*exp((-2.462232e+04_pr)*R_T_inv + (1.585714e+00_pr)*T_log )
    k(r83b) = (3.088315e-05_pr)*exp((-1.450583e+04_pr)*R_T_inv + (3.351004e+00_pr)*T_log )
    k(r84b) = (3.340659e+00_pr)*exp((-5.754876e+04_pr)*R_T_inv + (1.783363e+00_pr)*T_log )
    k(r85b) = (2.590513e+10_pr)*exp((-3.130134e+03_pr)*R_T_inv + (-1.086147e+00_pr)*T_log )
    k(r86b) = (1.220218e+03_pr)*exp((-2.856163e+05_pr)*R_T_inv + (8.711019e-01_pr)*T_log )
    k(r87b) = (1.603254e+08_pr)*exp((-6.402354e+02_pr)*R_T_inv + (-9.171463e-03_pr)*T_log )
    k(r88b) = (1.640843e+08_pr)*exp((5.080403e+02_pr)*R_T_inv + (-1.484024e-01_pr)*T_log )
    k(r89b) = (1.196813e+08_pr)*exp((-9.990839e+04_pr)*R_T_inv + (-3.202659e-01_pr)*T_log )
    k(r90b) = (2.922447e+00_pr)*exp((-2.217995e+05_pr)*R_T_inv + (2.379105e+00_pr)*T_log )
    k(r91b) = (2.045994e+09_pr)*exp((-2.874374e+05_pr)*R_T_inv + (-6.512301e-02_pr)*T_log )
    k(r92b) = (4.467439e+09_pr)*exp((1.807730e+03_pr)*R_T_inv + (-8.240852e-01_pr)*T_log )
    k(r93b) = (4.328554e-07_pr)*exp((-2.521260e+05_pr)*R_T_inv + (3.503194e+00_pr)*T_log )
    k_0(FOr94b) =(1.885744e+23_pr)*exp((-1.357623e+05_pr)*R_T_inv + (-3.764212e+00_pr)*T_log )
    k_inf(FOr94b) =(2.150575e+14_pr)*exp((-1.357623e+05_pr)*R_T_inv + (1.357882e-01_pr)*T_log )
    FC(FOr94b) = ((1.0_pr - 6.000000e-01_pr)*exp(-Tloc/(1.000000e+03_pr)) + (6.000000e-01_pr)*exp(-Tloc/(7.000000e+01_pr)))&
              + exp(-(1.700000e+03_pr)/Tloc)
    k(r94b) = getlindratecoeff(Tloc, k_0(FOr94b), k_inf(FOr94b),FC(FOr94b), M(mM94),Ploc)
    k(r95b) = (8.949916e+08_pr)*exp((-3.796703e+04_pr)*R_T_inv + (-1.183389e+00_pr)*T_log )
    k(r96b) = (2.546660e-04_pr)*exp((6.833154e+03_pr)*R_T_inv + (2.591969e+00_pr)*T_log )
    k(r97b) = (5.810137e+09_pr)*exp((-1.415657e+04_pr)*R_T_inv + (-1.470076e+00_pr)*T_log )
    k(r98b) = (1.277108e+09_pr)*exp((-1.142504e+05_pr)*R_T_inv + (-8.480798e-01_pr)*T_log )
    k(r99b) = (1.650765e+09_pr)*exp((-1.465245e+05_pr)*R_T_inv + (-1.028926e+00_pr)*T_log )
    k(r102b) = (1.809144e+05_pr)*exp((-1.706608e+05_pr)*R_T_inv + (3.113226e-01_pr)*T_log )
    k(r103b) = (1.528708e+07_pr)*exp((-2.404526e+05_pr)*R_T_inv + (-2.399457e-02_pr)*T_log )
    k(r104b) = (6.729886e+06_pr)*exp((-2.498955e+05_pr)*R_T_inv + (4.995668e-01_pr)*T_log )
    k(r105b) = (4.104641e+02_pr)*exp((9.087604e+03_pr)*R_T_inv + (1.203872e+00_pr)*T_log )
    k(r106b) = (1.316080e+07_pr)*exp((-4.014551e+04_pr)*R_T_inv + (-8.252791e-02_pr)*T_log )
    k(r107b) = (1.189579e+08_pr)*exp((-7.878821e+05_pr)*R_T_inv + (6.019279e-02_pr)*T_log )
    k(r108b) = (1.119025e+09_pr)*exp((-4.191204e+05_pr)*R_T_inv + (-4.196452e-01_pr)*T_log )
    k(r109b) = (1.645159e+11_pr)*exp((-3.599487e+05_pr)*R_T_inv + (-5.000020e-01_pr)*T_log )
    k(r110b) = (5.190761e+09_pr)*exp((-6.592255e+04_pr)*R_T_inv + (-3.981040e-01_pr)*T_log )
    k(r112b) = (1.535973e+06_pr)*exp((-7.797290e+05_pr)*R_T_inv + (4.292588e-01_pr)*T_log )
    k(r113b) = (2.632160e+07_pr)*exp((-3.763511e+04_pr)*R_T_inv + (-8.252791e-02_pr)*T_log )
    k(r114b) = (7.896479e+06_pr)*exp((-3.763511e+04_pr)*R_T_inv + (-8.252791e-02_pr)*T_log )
    k(r115b) = (6.141706e+06_pr)*exp((-3.763511e+04_pr)*R_T_inv + (-8.252791e-02_pr)*T_log )
    k(r116b) = (6.091534e+04_pr)*exp((-2.539397e+05_pr)*R_T_inv + (5.928926e-01_pr)*T_log )
    k_0(FOr117b) =(4.745735e+22_pr)*exp((-4.661752e+05_pr)*R_T_inv + (-3.071155e+00_pr)*T_log )
    k_inf(FOr117b) =(3.707605e+17_pr)*exp((-4.610289e+05_pr)*R_T_inv + (-7.311550e-01_pr)*T_log )
    FC(FOr117b) = ((1.0_pr - 6.800000e-01_pr)*exp(-Tloc/(7.800000e+01_pr)) + (6.800000e-01_pr)*exp(-Tloc/(1.995000e+03_pr)))&
              + exp(-(5.590000e+03_pr)/Tloc)
    k(r117b) = getlindratecoeff(Tloc, k_0(FOr117b), k_inf(FOr117b),FC(FOr117b), M(mM117),Ploc)
    k(r118b) = (3.999848e+06_pr)*exp((-3.179695e+05_pr)*R_T_inv + (-1.800165e-03_pr)*T_log )
    k(r121b) = (6.376960e+09_pr)*exp((-6.472318e+05_pr)*R_T_inv + (-1.795028e-01_pr)*T_log )
    k(r122b) = (2.830047e+07_pr)*exp((-5.774400e+05_pr)*R_T_inv + (1.558144e-01_pr)*T_log )
    k_0(FOr123b) =(1.245762e+32_pr)*exp((-3.836385e+05_pr)*R_T_inv + (-4.535345e+00_pr)*T_log )
    k_inf(FOr123b) =(3.521976e+21_pr)*exp((-3.802633e+05_pr)*R_T_inv + (-1.475345e+00_pr)*T_log )
    FC(FOr123b) = ((1.0_pr - 0.000000e+00_pr)*exp(-Tloc/(5.700000e+02_pr)) + (0.000000e+00_pr)*exp(-Tloc/(1.000000e+30_pr)))&
              + exp(-(1.000000e+30_pr)/Tloc)
    k(r123b) = getlindratecoeff(Tloc, k_0(FOr123b), k_inf(FOr123b),FC(FOr123b), M(mM123),Ploc)
    k_0(FOr124b) =(1.996591e+37_pr)*exp((-4.494293e+05_pr)*R_T_inv + (-6.972214e+00_pr)*T_log )
    k_inf(FOr124b) =(5.227256e+19_pr)*exp((-4.280700e+05_pr)*R_T_inv + (-8.822137e-01_pr)*T_log )
    FC(FOr124b) = ((1.0_pr - 8.420000e-01_pr)*exp(-Tloc/(1.250000e+02_pr)) + (8.420000e-01_pr)*exp(-Tloc/(2.219000e+03_pr)))&
              + exp(-(6.882000e+03_pr)/Tloc)
    k(r124b) = getlindratecoeff(Tloc, k_0(FOr124b), k_inf(FOr124b),FC(FOr124b), M(mM124),Ploc)
    k(r125b) = (2.011285e-01_pr)*exp((-4.278768e+04_pr)*R_T_inv + (2.176635e+00_pr)*T_log )
    k(r126b) = (3.100593e-03_pr)*exp((-2.965516e+04_pr)*R_T_inv + (2.663410e+00_pr)*T_log )
    k(r127b) = (9.413641e-02_pr)*exp((-7.689559e+04_pr)*R_T_inv + (2.210384e+00_pr)*T_log )
    k(r128b) = (2.605250e+05_pr)*exp((7.969855e+02_pr)*R_T_inv + (2.859042e-02_pr)*T_log )
    k(r129b) = (5.964871e-08_pr)*exp((-5.126604e+04_pr)*R_T_inv + (4.177695e+00_pr)*T_log )
    k(r130b) = (6.861965e-06_pr)*exp((-1.401579e+04_pr)*R_T_inv + (3.398699e+00_pr)*T_log )
    k(r131b) = (5.601728e-04_pr)*exp((-6.818727e+03_pr)*R_T_inv + (2.639664e+00_pr)*T_log )
    k(r132b) = (5.559911e+01_pr)*exp((-4.436988e+04_pr)*R_T_inv + (7.869711e-01_pr)*T_log )
    k(r133b) = (1.556287e+07_pr)*exp((-7.720471e+04_pr)*R_T_inv + (-1.214693e-01_pr)*T_log )
    k_0(FOr134b) =(7.606229e+32_pr)*exp((-1.717304e+05_pr)*R_T_inv + (-6.613318e+00_pr)*T_log )
    k_inf(FOr134b) =(5.129246e+08_pr)*exp((-1.532622e+05_pr)*R_T_inv + (1.491682e+00_pr)*T_log )
    FC(FOr134b) = ((1.0_pr - -5.690000e-01_pr)*exp(-Tloc/(2.990000e+02_pr)) + (-5.690000e-01_pr)*exp(-Tloc/(-9.147000e+03_pr)))&
              + exp(-(1.524000e+02_pr)/Tloc)
    k(r134b) = getlindratecoeff(Tloc, k_0(FOr134b), k_inf(FOr134b),FC(FOr134b), M(mM134),Ploc)
    k(r135b) = (2.476487e+12_pr)*exp((-3.289969e+04_pr)*R_T_inv + (-1.276971e+00_pr)*T_log )
    k(r136b) = (2.748711e+06_pr)*exp((1.408070e+04_pr)*R_T_inv + (-3.202253e-02_pr)*T_log )
    k(r137b) = (2.404095e-01_pr)*exp((-2.782675e+05_pr)*R_T_inv + (2.706799e+00_pr)*T_log )
    k(r138b) = (4.779132e+12_pr)*exp((-1.402273e+04_pr)*R_T_inv + (-1.255131e+00_pr)*T_log )
    k(r139b) = (6.547183e+05_pr)*exp((-2.851485e+05_pr)*R_T_inv + (3.557387e-01_pr)*T_log )
    k(r140b) = (1.490412e+01_pr)*exp((-5.303034e+04_pr)*R_T_inv + (1.237694e+00_pr)*T_log )
    k(r141b) = (5.344618e-06_pr)*exp((-1.152908e+05_pr)*R_T_inv + (3.617694e+00_pr)*T_log )
    k(r144b) = (4.765443e+01_pr)*exp((-7.348242e+04_pr)*R_T_inv + (1.691294e+00_pr)*T_log )
    k_0(FOr147b) =(1.315930e+26_pr)*exp((-4.748460e+05_pr)*R_T_inv + (-3.799295e+00_pr)*T_log )
    k_inf(FOr147b) =(5.714897e+14_pr)*exp((-4.621266e+05_pr)*R_T_inv + (3.307049e-01_pr)*T_log )
    FC(FOr147b) = ((1.0_pr - 7.820000e-01_pr)*exp(-Tloc/(2.075000e+02_pr)) + (7.820000e-01_pr)*exp(-Tloc/(2.663000e+03_pr)))&
              + exp(-(6.095000e+03_pr)/Tloc)
    k(r147b) = getlindratecoeff(Tloc, k_0(FOr147b), k_inf(FOr147b),FC(FOr147b), M(mM147),Ploc)
    k(r148b) = (9.464868e-02_pr)*exp((-2.596913e+04_pr)*R_T_inv + (2.253716e+00_pr)*T_log )
    k(r149b) = (1.485713e-03_pr)*exp((-1.107428e+05_pr)*R_T_inv + (2.395851e+00_pr)*T_log )
    k(r150b) = (1.514021e-04_pr)*exp((-4.269462e+04_pr)*R_T_inv + (3.102465e+00_pr)*T_log )
    k(r151b) = (2.608325e-03_pr)*exp((-5.942655e+04_pr)*R_T_inv + (2.115495e+00_pr)*T_log )
    k(r152b) = (7.691475e-07_pr)*exp((-1.687470e+04_pr)*R_T_inv + (3.924777e+00_pr)*T_log )
    k(r153b) = (1.946147e+05_pr)*exp((1.622184e+04_pr)*R_T_inv + (7.567181e-02_pr)*T_log )
    k(r154b) = (2.955039e+01_pr)*exp((-3.451502e+03_pr)*R_T_inv + (8.340525e-01_pr)*T_log )
    k(r155b) = (2.647552e-04_pr)*exp((-9.296793e+03_pr)*R_T_inv + (2.800746e+00_pr)*T_log )
    k(r156b) = (7.484708e+12_pr)*exp((-3.091433e+05_pr)*R_T_inv + (-9.354965e-01_pr)*T_log )
    k(r157b) = (5.957714e+21_pr)*exp((-3.896341e+05_pr)*R_T_inv + (-4.886446e+00_pr)*T_log )
  
    return
  end subroutine get_rate_coefficients

  ! ----------------------------------------------- !
  ! Evaluate reaction rates                         !
  ! ----------------------------------------------- !
  subroutine get_reaction_rates(w,k,m,c,cqss)
    implicit none

    real(pr), dimension(nspec) :: c
    real(pr), dimension(nqss) :: cqss
    real(pr), dimension(nreac + nreac_reverse) :: w,k
    real(pr), dimension(nTB + nFO) :: m

    w(r1f) = k(r1f) * c(sH) * c(sO2) 
    w(r2f) = k(r2f) * c(sH2) * c(sO) 
    w(r3f) = k(r3f) * c(sH2) * c(sOH) 
    w(r4f) = k(r4f) * c(sH2O) * c(sO) 
    w(r5f) = k(r5f) * c(sH2) * m(mM5)
    w(r6f) = k(r6f) * c(sO)**2.0_pr * m(mM6)
    w(r7f) = k(r7f) * c(sH) * c(sO) * m(mM7)
    w(r8f) = k(r8f) * c(sH) * c(sOH) * m(mM8)
    w(r9f) = k(r9f) * c(sH) * c(sO2) 
    w(r10f) = k(r10f) * c(sH) * c(sO2) 
    w(r11f) = k(r11f) * c(sH) * c(sO2) 
    w(r12f) = k(r12f) * c(sH) * c(sHO2) 
    w(r13f) = k(r13f) * c(sH2) * c(sO2) 
    w(r14f) = k(r14f) * c(sHO2) * c(sO) 
    w(r15f) = k(r15f) * c(sHO2) * c(sOH) 
    w(r16f) = k(r16f) * c(sHO2)**2.0_pr 
    w(r17f) = k(r17f) * c(sHO2)**2.0_pr 
    w(r18f) = k(r18f) * c(sH2O2) 
    w(r19f) = k(r19f) * c(sH2O2) 
    w(r20f) = k(r20f) * c(sH) * c(sH2O2) 
    w(r21f) = k(r21f) * c(sH) * c(sH2O2) 
    w(r22f) = k(r22f) * c(sH2O2) * c(sO) 
    w(r23f) = k(r23f) * c(sH2O2) * c(sOH) 
    w(r24f) = k(r24f) * c(sH2O2) * c(sOH) 
    w(r25f) = k(r25f) * c(sCO) * c(sO) 
    w(r26f) = k(r26f) * c(sCO) * c(sO2) 
    w(r27f) = k(r27f) * c(sCO) * c(sOH) 
    w(r28f) = k(r28f) * c(sCO) * c(sOH) 
    w(r29f) = k(r29f) * c(sCO) * c(sHO2) 
    w(r30f) = k(r30f) * c(sHCO) * m(mM30)
    w(r31f) = k(r31f) * c(sHCO) * c(sO2) 
    w(r32f) = k(r32f) * c(sH) * c(sHCO) 
    w(r33f) = k(r33f) * c(sHCO) * c(sO) 
    w(r34f) = k(r34f) * c(sHCO) * c(sO) 
    w(r35f) = k(r35f) * c(sHCO) * c(sOH) 
    w(r36f) = k(r36f) * c(sHCO) * c(sHO2) 
    w(r37f) = k(r37f) * c(sHCO)**2.0_pr 
    w(r38f) = k(r38f) * c(sCH3) * c(sHCO) 
    w(r39f) = k(r39f) * c(sCH2O) * c(sO2) 
    w(r40f) = k(r40f) * c(sHCO)**2.0_pr 
    w(r41f) = k(r41f) * c(sH) * c(sHCO) 
    w(r42f) = k(r42f) * c(sCO) * c(sH2) 
    w(r43f) = k(r43f) * c(sCH2O) * c(sOH) 
    w(r44f) = k(r44f) * c(sCH2O) * c(sH) 
    w(r45f) = k(r45f) * c(sCH2O) * c(sO) 
    w(r46f) = k(r46f) * c(sCH2O) * c(sCH3) 
    w(r47f) = k(r47f) * c(sCH2O) * c(sHO2) 
    w(r48f) = k(r48f) * c(sCH3O) 
    w(r49f) = k(r49f) * c(sCH3O) * c(sO2) 
    w(r50f) = k(r50f) * c(sCH2O) * c(sCH3O) 
    w(r51f) = k(r51f) * c(sCH3) * c(sCH3OH) 
    w(r52f) = k(r52f) * c(sCH3) * c(sCH3O) 
    w(r53f) = k(r53f) * c(sCH3O) * c(sH) 
    w(r54f) = k(r54f) * c(sCH3O) * c(sHO2) 
    w(r55f) = k(r55f) * c(sCH2O) * c(sH) 
    w(r56f) = k(r56f) * c(sCH2OH) * c(sO2) 
    w(r57f) = k(r57f) * c(sCH2OH) * c(sO2) 
    w(r58f) = k(r58f) * c(sCH2OH) * c(sH) 
    w(r59f) = k(r59f) * c(sCH2OH) * c(sHO2) 
    w(r60f) = k(r60f) * c(sCH2OH) * c(sHCO) 
    w(r61f) = k(r61f) * c(sCH2OH) * c(sCH3O) 
    w(r62f) = k(r62f) * c(sCH3OH) * c(sHCO) 
    w(r63f) = k(r63f) * c(sCH2OH) * c(sOH) 
    w(r64f) = k(r64f) * c(sCH2OH) * c(sO) 
    w(r65f) = k(r65f) * c(sCH2OH)**2.0_pr 
    w(r66f) = k(r66f) * c(sCH3OH) 
    w(r67f) = k(r67f) * c(sCH3OH) 
    w(r68f) = k(r68f) * c(sCH3OH) 
    w(r69f) = k(r69f) * c(sCH3OH) * c(sH) 
    w(r70f) = k(r70f) * c(sCH3OH) * c(sH) 
    w(r71f) = k(r71f) * c(sCH3OH) * c(sO) 
    w(r72f) = k(r72f) * c(sCH3OH) * c(sOH) 
    w(r73f) = k(r73f) * c(sCH3OH) * c(sOH) 
    w(r74f) = k(r74f) * c(sCH3OH) * c(sO2) 
    w(r75f) = k(r75f) * c(sCH3OH) * c(sHO2) 
    w(r76f) = k(r76f) * c(sCH3) * c(sCH3OH) 
    w(r77f) = k(r77f) * c(sCH3O) * c(sCH3OH) 
    w(r78f) = k(r78f) * c(sCH3O)**2.0_pr 
    w(r79f) = k(r79f) * c(sCH3) * c(sH) 
    w(r80f) = k(r80f) * c(sCH4) * c(sH) 
    w(r81f) = k(r81f) * c(sCH4) * c(sOH) 
    w(r82f) = k(r82f) * c(sCH4) * c(sO) 
    w(r83f) = k(r83f) * c(sCH4) * c(sHO2) 
    w(r84f) = k(r84f) * c(sCH2) * c(sCH4) 
    w(r85f) = k(r85f) * c(sCH3) * c(sOH) 
    w(r86f) = k(r86f) * c(sCH3) * c(sOH) 
    w(r87f) = k(r87f) * c(sCH3) * c(sOH) 
    w(r88f) = k(r88f) * c(sCH3) * c(sOH) 
    w(r89f) = k(r89f) * c(sCH3) * c(sHO2) 
    w(r90f) = k(r90f) * c(sCH3) * c(sHO2) 
    w(r91f) = k(r91f) * c(sCH3) * c(sO) 
    w(r92f) = k(r92f) * c(sCH3) * c(sO2) 
    w(r93f) = k(r93f) * c(sCH3) * c(sO2) 
    w(r94f) = k(r94f) * c(sCH3) * c(sO2) 
    w(r95f) = k(r95f) * c(sCH2O) * c(sCH3O2) 
    w(r96f) = k(r96f) * c(sCH3O2) * c(sCH4) 
    w(r97f) = k(r97f) * c(sCH3O2) * c(sCH3OH) 
    w(r98f) = k(r98f) * c(sCH3) * c(sCH3O2) 
    w(r99f) = k(r99f) * c(sCH3O2) * c(sHO2) 
    w(r100f) = k(r100f) * c(sCH3O2)**2.0_pr 
    w(r101f) = k(r101f) * c(sCH3O2)**2.0_pr 
    w(r102f) = k(r102f) * c(sCH3O2) * c(sH) 
    w(r103f) = k(r103f) * c(sCH3O2) * c(sO) 
    w(r104f) = k(r104f) * c(sCH3O2) * c(sOH) 
    w(r105f) = k(r105f) * c(sCH3O2H) 
    w(r106f) = k(r106f) * c(sCH2GSG) * c(sN2) 
    w(r107f) = k(r107f) * c(sCH2GSG) * c(sO) 
    w(r108f) = k(r108f) * c(sCH2GSG) * c(sO) 
    w(r109f) = k(r109f) * c(sCH2GSG) * c(sOH) 
    w(r110f) = k(r110f) * c(sCH2GSG) * c(sH2) 
    w(r111f) = k(r111f) * c(sCH2GSG) * c(sO2) 
    w(r112f) = k(r112f) * c(sCH2GSG) * c(sO2) 
    w(r113f) = k(r113f) * c(sCH2GSG) * c(sH2O) 
    w(r114f) = k(r114f) * c(sCH2GSG) * c(sCO) 
    w(r115f) = k(r115f) * c(sCH2GSG) * c(sCO2) 
    w(r116f) = k(r116f) * c(sCH2GSG) * c(sCO2) 
    w(r117f) = k(r117f) * c(sCH2) * c(sH) 
    w(r118f) = k(r118f) * c(sCH2) * c(sO2) 
    w(r119f) = k(r119f) * c(sCH2) * c(sO2) 
    w(r120f) = k(r120f) * c(sCH2) * c(sO) 
    w(r121f) = k(r121f) * c(sC) * c(sOH) 
    w(r122f) = k(r122f) * c(sC) * c(sO2) 
    w(r123f) = k(r123f) * c(sCH3)**2.0_pr 
    w(r124f) = k(r124f) * c(sC2H5) * c(sH) 
    w(r125f) = k(r125f) * c(sC2H6) * c(sH) 
    w(r126f) = k(r126f) * c(sC2H6) * c(sO) 
    w(r127f) = k(r127f) * c(sC2H6) * c(sOH) 
    w(r128f) = k(r128f) * c(sC2H6) * c(sO2) 
    w(r129f) = k(r129f) * c(sC2H6) * c(sCH3) 
    w(r130f) = k(r130f) * c(sC2H6) * c(sHO2) 
    w(r131f) = k(r131f) * c(sC2H6) * c(sCH3O2) 
    w(r132f) = k(r132f) * c(sC2H6) * c(sCH3O) 
    w(r133f) = k(r133f) * c(sC2H6) * c(sCH2GSG) 
    w(r134f) = k(r134f) * c(sC2H4) * c(sH) 
    w(r135f) = k(r135f) * c(sCH3O2) * c(sH2) 
    w(r136f) = k(r136f) * c(sC2H4)**2.0_pr 
    w(r137f) = k(r137f) * c(sC2H5) * c(sCH3) 
    w(r138f) = k(r138f) * c(sCH3)**2.0_pr 
    w(r139f) = k(r139f) * c(sC2H5) * c(sH) 
    w(r140f) = k(r140f) * c(sC2H5) * c(sO2) 
    w(r141f) = k(r141f) * c(sC2H5) * c(sO2) 
    w(r142f) = k(r142f) * c(sHCCO) * c(sOH) 
    w(r143f) = k(r143f) * c(sHCCO) * c(sO) 
    w(r144f) = k(r144f) * c(sH) * c(sHCCO) 
    w(r145f) = k(r145f) * c(sHCCO) * c(sO2) 
    w(r146f) = k(r146f) * c(sHCCO) * c(sO2) 
    w(r147f) = k(r147f) * c(sC2H3) * c(sH) 
    w(r148f) = k(r148f) * c(sC2H4) * c(sH) 
    w(r149f) = k(r149f) * c(sC2H4) * c(sO) 
    w(r150f) = k(r150f) * c(sC2H4) * c(sOH) 
    w(r151f) = k(r151f) * c(sC2H4) * c(sOH) 
    w(r152f) = k(r152f) * c(sC2H4) * c(sCH3) 
    w(r153f) = k(r153f) * c(sC2H4) * c(sO2) 
    w(r154f) = k(r154f) * c(sC2H4) * c(sCH3O) 
    w(r155f) = k(r155f) * c(sC2H4) * c(sCH3O2) 
    w(r156f) = k(r156f) * c(sCH2GSG) * c(sCH3) 
    w(r157f) = k(r157f) * c(sC2H3) * c(sO2) 
    w(r158f) = k(r158f) * c(sC2H3) * c(sO2) 
    w(r1b) = k(r1b) * c(sO) * c(sOH) 
    w(r2b) = k(r2b) * c(sH) * c(sOH) 
    w(r3b) = k(r3b) * c(sH) * c(sH2O) 
    w(r4b) = k(r4b) * c(sOH)**2.0_pr 
    w(r5b) = k(r5b) * c(sH)**2.0_pr * m(mM5)
    w(r6b) = k(r6b) * c(sO2) * m(mM6)
    w(r7b) = k(r7b) * c(sOH) * m(mM7)
    w(r8b) = k(r8b) * c(sH2O) * m(mM8)
    w(r9b) = k(r9b) * c(sHO2) 
    w(r10b) = k(r10b) * c(sHO2) 
    w(r11b) = k(r11b) * c(sHO2) 
    w(r12b) = k(r12b) * c(sOH)**2.0_pr 
    w(r13b) = k(r13b) * c(sH) * c(sHO2) 
    w(r14b) = k(r14b) * c(sO2) * c(sOH) 
    w(r15b) = k(r15b) * c(sH2O) * c(sO2) 
    w(r16b) = k(r16b) * c(sH2O2) * c(sO2) 
    w(r17b) = k(r17b) * c(sH2O2) * c(sO2) 
    w(r18b) = k(r18b) * c(sOH)**2.0_pr 
    w(r19b) = k(r19b) * c(sOH)**2.0_pr 
    w(r20b) = k(r20b) * c(sH2O) * c(sOH) 
    w(r21b) = k(r21b) * c(sH2) * c(sHO2) 
    w(r22b) = k(r22b) * c(sHO2) * c(sOH) 
    w(r23b) = k(r23b) * c(sH2O) * c(sHO2) 
    w(r24b) = k(r24b) * c(sH2O) * c(sHO2) 
    w(r25b) = k(r25b) * c(sCO2) 
    w(r26b) = k(r26b) * c(sCO2) * c(sO) 
    w(r27b) = k(r27b) * c(sCO2) * c(sH) 
    w(r28b) = k(r28b) * c(sCO2) * c(sH) 
    w(r29b) = k(r29b) * c(sCO2) * c(sOH) 
    w(r30b) = k(r30b) * c(sCO) * c(sH) * m(mM30)
    w(r31b) = k(r31b) * c(sCO) * c(sHO2) 
    w(r32b) = k(r32b) * c(sCO) * c(sH2) 
    w(r33b) = k(r33b) * c(sCO) * c(sOH) 
    w(r34b) = k(r34b) * c(sCO2) * c(sH) 
    w(r35b) = k(r35b) * c(sCO) * c(sH2O) 
    w(r38b) = k(r38b) * c(sCH4) * c(sCO) 
    w(r39b) = k(r39b) * c(sHCO) * c(sHO2) 
    w(r40b) = k(r40b) * c(sCH2O) * c(sCO) 
    w(r41b) = k(r41b) * c(sCH2O) 
    w(r42b) = k(r42b) * c(sCH2O) 
    w(r43b) = k(r43b) * c(sH2O) * c(sHCO) 
    w(r44b) = k(r44b) * c(sH2) * c(sHCO) 
    w(r45b) = k(r45b) * c(sHCO) * c(sOH) 
    w(r46b) = k(r46b) * c(sCH4) * c(sHCO) 
    w(r47b) = k(r47b) * c(sH2O2) * c(sHCO) 
    w(r48b) = k(r48b) * c(sCH2O) * c(sH) 
    w(r49b) = k(r49b) * c(sCH2O) * c(sHO2) 
    w(r50b) = k(r50b) * c(sCH3OH) * c(sHCO) 
    w(r51b) = k(r51b) * c(sCH3O) * c(sCH4) 
    w(r52b) = k(r52b) * c(sCH2O) * c(sCH4) 
    w(r53b) = k(r53b) * c(sCH2O) * c(sH2) 
    w(r54b) = k(r54b) * c(sCH2O) * c(sH2O2) 
    w(r55b) = k(r55b) * c(sCH2OH) 
    w(r56b) = k(r56b) * c(sCH2O) * c(sHO2) 
    w(r57b) = k(r57b) * c(sCH2O) * c(sHO2) 
    w(r58b) = k(r58b) * c(sCH2O) * c(sH2) 
    w(r59b) = k(r59b) * c(sCH2O) * c(sH2O2) 
    w(r60b) = k(r60b) * c(sCH2O)**2.0_pr 
    w(r61b) = k(r61b) * c(sCH2O) * c(sCH3OH) 
    w(r62b) = k(r62b) * c(sCH2O) * c(sCH2OH) 
    w(r63b) = k(r63b) * c(sCH2O) * c(sH2O) 
    w(r64b) = k(r64b) * c(sCH2O) * c(sOH) 
    w(r65b) = k(r65b) * c(sCH2O) * c(sCH3OH) 
    w(r66b) = k(r66b) * c(sCH3) * c(sOH) 
    w(r67b) = k(r67b) * c(sCH2GSG) * c(sH2O) 
    w(r68b) = k(r68b) * c(sCH2OH) * c(sH) 
    w(r69b) = k(r69b) * c(sCH2OH) * c(sH2) 
    w(r70b) = k(r70b) * c(sCH3O) * c(sH2) 
    w(r71b) = k(r71b) * c(sCH2OH) * c(sOH) 
    w(r72b) = k(r72b) * c(sCH2OH) * c(sH2O) 
    w(r73b) = k(r73b) * c(sCH3O) * c(sH2O) 
    w(r74b) = k(r74b) * c(sCH2OH) * c(sHO2) 
    w(r75b) = k(r75b) * c(sCH2OH) * c(sH2O2) 
    w(r76b) = k(r76b) * c(sCH2OH) * c(sCH4) 
    w(r77b) = k(r77b) * c(sCH2OH) * c(sCH3OH) 
    w(r78b) = k(r78b) * c(sCH2O) * c(sCH3OH) 
    w(r79b) = k(r79b) * c(sCH4) 
    w(r80b) = k(r80b) * c(sCH3) * c(sH2) 
    w(r81b) = k(r81b) * c(sCH3) * c(sH2O) 
    w(r82b) = k(r82b) * c(sCH3) * c(sOH) 
    w(r83b) = k(r83b) * c(sCH3) * c(sH2O2) 
    w(r84b) = k(r84b) * c(sCH3)**2.0_pr 
    w(r85b) = k(r85b) * c(sCH2GSG) * c(sH2O) 
    w(r86b) = k(r86b) * c(sCH2O) * c(sH2) 
    w(r87b) = k(r87b) * c(sCH2OH) * c(sH) 
    w(r88b) = k(r88b) * c(sCH3O) * c(sH) 
    w(r89b) = k(r89b) * c(sCH3O) * c(sOH) 
    w(r90b) = k(r90b) * c(sCH4) * c(sO2) 
    w(r91b) = k(r91b) * c(sCH2O) * c(sH) 
    w(r92b) = k(r92b) * c(sCH3O) * c(sO) 
    w(r93b) = k(r93b) * c(sCH2O) * c(sOH) 
    w(r94b) = k(r94b) * c(sCH3O2) 
    w(r95b) = k(r95b) * c(sCH3O2H) * c(sHCO) 
    w(r96b) = k(r96b) * c(sCH3) * c(sCH3O2H) 
    w(r97b) = k(r97b) * c(sCH2OH) * c(sCH3O2H) 
    w(r98b) = k(r98b) * c(sCH3O)**2.0_pr 
    w(r99b) = k(r99b) * c(sCH3O2H) * c(sO2) 
    w(r102b) = k(r102b) * c(sCH3O) * c(sOH) 
    w(r103b) = k(r103b) * c(sCH3O) * c(sO2) 
    w(r104b) = k(r104b) * c(sCH3OH) * c(sO2) 
    w(r105b) = k(r105b) * c(sCH3O) * c(sOH) 
    w(r106b) = k(r106b) * c(sCH2) * c(sN2) 
    w(r107b) = k(r107b) * c(sCO) * c(sH2) 
    w(r108b) = k(r108b) * c(sH) * c(sHCO) 
    w(r109b) = k(r109b) * c(sCH2O) * c(sH) 
    w(r110b) = k(r110b) * c(sCH3) * c(sH) 
    w(r112b) = k(r112b) * c(sCO) * c(sH2O) 
    w(r113b) = k(r113b) * c(sCH2) * c(sH2O) 
    w(r114b) = k(r114b) * c(sCH2) * c(sCO) 
    w(r115b) = k(r115b) * c(sCH2) * c(sCO2) 
    w(r116b) = k(r116b) * c(sCH2O) * c(sCO) 
    w(r117b) = k(r117b) * c(sCH3) 
    w(r118b) = k(r118b) * c(sHCO) * c(sOH) 
    w(r121b) = k(r121b) * c(sCO) * c(sH) 
    w(r122b) = k(r122b) * c(sCO) * c(sO) 
    w(r123b) = k(r123b) * c(sC2H6) 
    w(r124b) = k(r124b) * c(sC2H6) 
    w(r125b) = k(r125b) * c(sC2H5) * c(sH2) 
    w(r126b) = k(r126b) * c(sC2H5) * c(sOH) 
    w(r127b) = k(r127b) * c(sC2H5) * c(sH2O) 
    w(r128b) = k(r128b) * c(sC2H5) * c(sHO2) 
    w(r129b) = k(r129b) * c(sC2H5) * c(sCH4) 
    w(r130b) = k(r130b) * c(sC2H5) * c(sH2O2) 
    w(r131b) = k(r131b) * c(sC2H5) * c(sCH3O2H) 
    w(r132b) = k(r132b) * c(sC2H5) * c(sCH3OH) 
    w(r133b) = k(r133b) * c(sC2H5) * c(sCH3) 
    w(r134b) = k(r134b) * c(sC2H5) 
    w(r135b) = k(r135b) * c(sCH3O2H) * c(sH) 
    w(r136b) = k(r136b) * c(sC2H3) * c(sC2H5) 
    w(r137b) = k(r137b) * c(sC2H4) * c(sCH4) 
    w(r138b) = k(r138b) * c(sC2H5) * c(sH) 
    w(r139b) = k(r139b) * c(sC2H4) * c(sH2) 
    w(r140b) = k(r140b) * c(sC2H4) * c(sHO2) 
    w(r141b) = k(r141b) * c(sC2H4) * c(sHO2) 
    w(r144b) = k(r144b) * c(sCH2GSG) * c(sCO) 
    w(r147b) = k(r147b) * c(sC2H4) 
    w(r148b) = k(r148b) * c(sC2H3) * c(sH2) 
    w(r149b) = k(r149b) * c(sCH3) * c(sHCO) 
    w(r150b) = k(r150b) * c(sC2H3) * c(sH2O) 
    w(r151b) = k(r151b) * c(sCH2O) * c(sCH3) 
    w(r152b) = k(r152b) * c(sC2H3) * c(sCH4) 
    w(r153b) = k(r153b) * c(sC2H3) * c(sHO2) 
    w(r154b) = k(r154b) * c(sC2H3) * c(sCH3OH) 
    w(r155b) = k(r155b) * c(sC2H3) * c(sCH3O2H) 
    w(r156b) = k(r156b) * c(sC2H4) * c(sH) 
    w(r157b) = k(r157b) * c(sCH2O) * c(sHCO) 
  
    return
  end subroutine get_reaction_rates
  
  ! ----------------------------------------------- !
  ! Evaluate production rates                       !
  ! ----------------------------------------------- !
  subroutine get_production_rates(cdot,w)
    implicit none

    real(pr), dimension(nspec) :: cdot
    real(pr), dimension(nreac + nreac_reverse) :: w

    cdot(sH) = 0.0_pr &
         - w(r1f) &
         + w(r1b) &
         + w(r2f) &
         - w(r2b) &
         + w(r3f) &
         - w(r3b) &
         + 2.0_pr * w(r5f) &
         - 2.0_pr * w(r5b) &
         - w(r7f) &
         + w(r7b) &
         - w(r8f) &
         + w(r8b) &
         - w(r9f) &
         + w(r9b) &
         - w(r10f) &
         + w(r10b) &
         - w(r11f) &
         + w(r11b) &
         - w(r12f) &
         + w(r12b) &
         + w(r13f) &
         - w(r13b) &
         - w(r20f) &
         + w(r20b) &
         - w(r21f) &
         + w(r21b) &
         + w(r27f) &
         - w(r27b) &
         + w(r28f) &
         - w(r28b) &
         + w(r30f) &
         - w(r30b) &
         - w(r32f) &
         + w(r32b) &
         + w(r34f) &
         - w(r34b) &
         + w(r36f) &
         - w(r41f) &
         + w(r41b) &
         - w(r44f) &
         + w(r44b) &
         + w(r48f) &
         - w(r48b) &
         - w(r53f) &
         + w(r53b) &
         - w(r55f) &
         + w(r55b) &
         - w(r58f) &
         + w(r58b) &
         + w(r68f) &
         - w(r68b) &
         - w(r69f) &
         + w(r69b) &
         - w(r70f) &
         + w(r70b) &
         - w(r79f) &
         + w(r79b) &
         - w(r80f) &
         + w(r80b) &
         + w(r87f) &
         - w(r87b) &
         + w(r88f) &
         - w(r88b) &
         + w(r91f) &
         - w(r91b) &
         - w(r102f) &
         + w(r102b) &
         + w(r108f) &
         - w(r108b) &
         + w(r109f) &
         - w(r109b) &
         + w(r110f) &
         - w(r110b) &
         + w(r111f) &
         - w(r117f) &
         + w(r117b) &
         + 2.0_pr * w(r119f) &
         + 2.0_pr * w(r120f) &
         + w(r121f) &
         - w(r121b) &
         - w(r124f) &
         + w(r124b) &
         - w(r125f) &
         + w(r125b) &
         - w(r134f) &
         + w(r134b) &
         + w(r135f) &
         - w(r135b) &
         + w(r138f) &
         - w(r138b) &
         - w(r139f) &
         + w(r139b) &
         + w(r143f) &
         - w(r144f) &
         + w(r144b) &
         + w(r146f) &
         - w(r147f) &
         + w(r147b) &
         - w(r148f) &
         + w(r148b) &
         + w(r156f) &
         - w(r156b) &
         + w(r158f) 

    cdot(sH2) = 0.0_pr &
         - w(r2f) &
         + w(r2b) &
         - w(r3f) &
         + w(r3b) &
         - w(r5f) &
         + w(r5b) &
         - w(r13f) &
         + w(r13b) &
         + w(r21f) &
         - w(r21b) &
         + w(r32f) &
         - w(r32b) &
         + w(r37f) &
         - w(r42f) &
         + w(r42b) &
         + w(r44f) &
         - w(r44b) &
         + w(r53f) &
         - w(r53b) &
         + w(r58f) &
         - w(r58b) &
         + w(r69f) &
         - w(r69b) &
         + w(r70f) &
         - w(r70b) &
         + w(r80f) &
         - w(r80b) &
         + w(r86f) &
         - w(r86b) &
         + w(r107f) &
         - w(r107b) &
         - w(r110f) &
         + w(r110b) &
         + w(r125f) &
         - w(r125b) &
         - w(r135f) &
         + w(r135b) &
         + w(r139f) &
         - w(r139b) &
         + w(r142f) &
         + w(r148f) &
         - w(r148b) 

    cdot(sO) = 0.0_pr &
         + w(r1f) &
         - w(r1b) &
         - w(r2f) &
         + w(r2b) &
         - w(r4f) &
         + w(r4b) &
         -2.0_pr * w(r6f) &
         + 2.0_pr * w(r6b) &
         - w(r7f) &
         + w(r7b) &
         - w(r14f) &
         + w(r14b) &
         - w(r22f) &
         + w(r22b) &
         - w(r25f) &
         + w(r25b) &
         + w(r26f) &
         - w(r26b) &
         - w(r33f) &
         + w(r33b) &
         - w(r34f) &
         + w(r34b) &
         - w(r45f) &
         + w(r45b) &
         - w(r64f) &
         + w(r64b) &
         - w(r71f) &
         + w(r71b) &
         - w(r82f) &
         + w(r82b) &
         - w(r91f) &
         + w(r91b) &
         + w(r92f) &
         - w(r92b) &
         - w(r103f) &
         + w(r103b) &
         - w(r107f) &
         + w(r107b) &
         - w(r108f) &
         + w(r108b) &
         - w(r120f) &
         + w(r122f) &
         - w(r122b) &
         - w(r126f) &
         + w(r126b) &
         - w(r143f) &
         - w(r149f) &
         + w(r149b) 

    cdot(sO2) = 0.0_pr &
         - w(r1f) &
         + w(r1b) &
         + w(r6f) &
         - w(r6b) &
         - w(r9f) &
         + w(r9b) &
         - w(r10f) &
         + w(r10b) &
         - w(r11f) &
         + w(r11b) &
         - w(r13f) &
         + w(r13b) &
         + w(r14f) &
         - w(r14b) &
         + w(r15f) &
         - w(r15b) &
         + w(r16f) &
         - w(r16b) &
         + w(r17f) &
         - w(r17b) &
         - w(r26f) &
         + w(r26b) &
         - w(r31f) &
         + w(r31b) &
         - w(r39f) &
         + w(r39b) &
         - w(r49f) &
         + w(r49b) &
         - w(r56f) &
         + w(r56b) &
         - w(r57f) &
         + w(r57b) &
         - w(r74f) &
         + w(r74b) &
         + w(r90f) &
         - w(r90b) &
         - w(r92f) &
         + w(r92b) &
         - w(r93f) &
         + w(r93b) &
         - w(r94f) &
         + w(r94b) &
         + w(r99f) &
         - w(r99b) &
         + w(r100f) &
         + w(r101f) &
         + w(r103f) &
         - w(r103b) &
         + w(r104f) &
         - w(r104b) &
         - w(r111f) &
         - w(r112f) &
         + w(r112b) &
         - w(r118f) &
         + w(r118b) &
         - w(r119f) &
         - w(r122f) &
         + w(r122b) &
         - w(r128f) &
         + w(r128b) &
         - w(r140f) &
         + w(r140b) &
         - w(r141f) &
         + w(r141b) &
         - w(r145f) &
         - w(r146f) &
         - w(r153f) &
         + w(r153b) &
         - w(r157f) &
         + w(r157b) &
         - w(r158f) 

    cdot(sOH) = 0.0_pr &
         + w(r1f) &
         - w(r1b) &
         + w(r2f) &
         - w(r2b) &
         - w(r3f) &
         + w(r3b) &
         + 2.0_pr * w(r4f) &
         - 2.0_pr * w(r4b) &
         + w(r7f) &
         - w(r7b) &
         - w(r8f) &
         + w(r8b) &
         + 2.0_pr * w(r12f) &
         - 2.0_pr * w(r12b) &
         + w(r14f) &
         - w(r14b) &
         - w(r15f) &
         + w(r15b) &
         + 2.0_pr * w(r18f) &
         - 2.0_pr * w(r18b) &
         + 2.0_pr * w(r19f) &
         - 2.0_pr * w(r19b) &
         + w(r20f) &
         - w(r20b) &
         + w(r22f) &
         - w(r22b) &
         - w(r23f) &
         + w(r23b) &
         - w(r24f) &
         + w(r24b) &
         - w(r27f) &
         + w(r27b) &
         - w(r28f) &
         + w(r28b) &
         + w(r29f) &
         - w(r29b) &
         + w(r33f) &
         - w(r33b) &
         - w(r35f) &
         + w(r35b) &
         + w(r36f) &
         - w(r43f) &
         + w(r43b) &
         + w(r45f) &
         - w(r45b) &
         - w(r63f) &
         + w(r63b) &
         + w(r64f) &
         - w(r64b) &
         + w(r66f) &
         - w(r66b) &
         + w(r71f) &
         - w(r71b) &
         - w(r72f) &
         + w(r72b) &
         - w(r73f) &
         + w(r73b) &
         - w(r81f) &
         + w(r81b) &
         + w(r82f) &
         - w(r82b) &
         - w(r85f) &
         + w(r85b) &
         - w(r86f) &
         + w(r86b) &
         - w(r87f) &
         + w(r87b) &
         - w(r88f) &
         + w(r88b) &
         + w(r89f) &
         - w(r89b) &
         + w(r93f) &
         - w(r93b) &
         + w(r102f) &
         - w(r102b) &
         - w(r104f) &
         + w(r104b) &
         + w(r105f) &
         - w(r105b) &
         - w(r109f) &
         + w(r109b) &
         + w(r111f) &
         + w(r118f) &
         - w(r118b) &
         - w(r121f) &
         + w(r121b) &
         + w(r126f) &
         - w(r126b) &
         - w(r127f) &
         + w(r127b) &
         - w(r142f) &
         + w(r145f) &
         - w(r150f) &
         + w(r150b) &
         - w(r151f) &
         + w(r151b) 

    cdot(sH2O) = 0.0_pr &
         + w(r3f) &
         - w(r3b) &
         - w(r4f) &
         + w(r4b) &
         + w(r8f) &
         - w(r8b) &
         + w(r15f) &
         - w(r15b) &
         + w(r20f) &
         - w(r20b) &
         + w(r23f) &
         - w(r23b) &
         + w(r24f) &
         - w(r24b) &
         + w(r35f) &
         - w(r35b) &
         + w(r43f) &
         - w(r43b) &
         + w(r63f) &
         - w(r63b) &
         + w(r67f) &
         - w(r67b) &
         + w(r72f) &
         - w(r72b) &
         + w(r73f) &
         - w(r73b) &
         + w(r81f) &
         - w(r81b) &
         + w(r85f) &
         - w(r85b) &
         + w(r112f) &
         - w(r112b) &
         + w(r127f) &
         - w(r127b) &
         + w(r150f) &
         - w(r150b) 

    cdot(sN2) = 0.0_pr 

    cdot(sHO2) = 0.0_pr &
         + w(r9f) &
         - w(r9b) &
         + w(r10f) &
         - w(r10b) &
         + w(r11f) &
         - w(r11b) &
         - w(r12f) &
         + w(r12b) &
         + w(r13f) &
         - w(r13b) &
         - w(r14f) &
         + w(r14b) &
         - w(r15f) &
         + w(r15b) &
         -2.0_pr * w(r16f) &
         + 2.0_pr * w(r16b) &
         -2.0_pr * w(r17f) &
         + 2.0_pr * w(r17b) &
         + w(r21f) &
         - w(r21b) &
         + w(r22f) &
         - w(r22b) &
         + w(r23f) &
         - w(r23b) &
         + w(r24f) &
         - w(r24b) &
         - w(r29f) &
         + w(r29b) &
         + w(r31f) &
         - w(r31b) &
         - w(r36f) &
         + w(r39f) &
         - w(r39b) &
         - w(r47f) &
         + w(r47b) &
         + w(r49f) &
         - w(r49b) &
         - w(r54f) &
         + w(r54b) &
         + w(r56f) &
         - w(r56b) &
         + w(r57f) &
         - w(r57b) &
         - w(r59f) &
         + w(r59b) &
         + w(r74f) &
         - w(r74b) &
         - w(r75f) &
         + w(r75b) &
         - w(r83f) &
         + w(r83b) &
         - w(r89f) &
         + w(r89b) &
         - w(r90f) &
         + w(r90b) &
         - w(r99f) &
         + w(r99b) &
         + w(r128f) &
         - w(r128b) &
         - w(r130f) &
         + w(r130b) &
         + w(r140f) &
         - w(r140b) &
         + w(r141f) &
         - w(r141b) &
         + w(r153f) &
         - w(r153b) 

    cdot(sH2O2) = 0.0_pr &
         + w(r16f) &
         - w(r16b) &
         + w(r17f) &
         - w(r17b) &
         - w(r18f) &
         + w(r18b) &
         - w(r19f) &
         + w(r19b) &
         - w(r20f) &
         + w(r20b) &
         - w(r21f) &
         + w(r21b) &
         - w(r22f) &
         + w(r22b) &
         - w(r23f) &
         + w(r23b) &
         - w(r24f) &
         + w(r24b) &
         + w(r47f) &
         - w(r47b) &
         + w(r54f) &
         - w(r54b) &
         + w(r59f) &
         - w(r59b) &
         + w(r75f) &
         - w(r75b) &
         + w(r83f) &
         - w(r83b) &
         + w(r130f) &
         - w(r130b) 

    cdot(sCO) = 0.0_pr &
         - w(r25f) &
         + w(r25b) &
         - w(r26f) &
         + w(r26b) &
         - w(r27f) &
         + w(r27b) &
         - w(r28f) &
         + w(r28b) &
         - w(r29f) &
         + w(r29b) &
         + w(r30f) &
         - w(r30b) &
         + w(r31f) &
         - w(r31b) &
         + w(r32f) &
         - w(r32b) &
         + w(r33f) &
         - w(r33b) &
         + w(r35f) &
         - w(r35b) &
         + 2.0_pr * w(r37f) &
         + w(r38f) &
         - w(r38b) &
         + w(r40f) &
         - w(r40b) &
         - w(r42f) &
         + w(r42b) &
         + w(r107f) &
         - w(r107b) &
         + w(r111f) &
         + w(r112f) &
         - w(r112b) &
         + w(r116f) &
         - w(r116b) &
         + w(r120f) &
         + w(r121f) &
         - w(r121b) &
         + w(r122f) &
         - w(r122b) &
         + 2.0_pr * w(r142f) &
         + 2.0_pr * w(r143f) &
         + w(r144f) &
         - w(r144b) &
         + 2.0_pr * w(r145f) &
         + w(r146f) &
         + w(r158f) 

    cdot(sCO2) = 0.0_pr &
         + w(r25f) &
         - w(r25b) &
         + w(r26f) &
         - w(r26b) &
         + w(r27f) &
         - w(r27b) &
         + w(r28f) &
         - w(r28b) &
         + w(r29f) &
         - w(r29b) &
         + w(r34f) &
         - w(r34b) &
         + w(r36f) &
         - w(r116f) &
         + w(r116b) &
         + w(r119f) &
         + w(r146f) 

    cdot(sCH2O) = 0.0_pr &
         - w(r39f) &
         + w(r39b) &
         + w(r40f) &
         - w(r40b) &
         + w(r41f) &
         - w(r41b) &
         + w(r42f) &
         - w(r42b) &
         - w(r43f) &
         + w(r43b) &
         - w(r44f) &
         + w(r44b) &
         - w(r45f) &
         + w(r45b) &
         - w(r46f) &
         + w(r46b) &
         - w(r47f) &
         + w(r47b) &
         + w(r48f) &
         - w(r48b) &
         + w(r49f) &
         - w(r49b) &
         - w(r50f) &
         + w(r50b) &
         + w(r52f) &
         - w(r52b) &
         + w(r53f) &
         - w(r53b) &
         + w(r54f) &
         - w(r54b) &
         - w(r55f) &
         + w(r55b) &
         + w(r56f) &
         - w(r56b) &
         + w(r57f) &
         - w(r57b) &
         + w(r58f) &
         - w(r58b) &
         + w(r59f) &
         - w(r59b) &
         + 2.0_pr * w(r60f) &
         - 2.0_pr * w(r60b) &
         + w(r61f) &
         - w(r61b) &
         + w(r62f) &
         - w(r62b) &
         + w(r63f) &
         - w(r63b) &
         + w(r64f) &
         - w(r64b) &
         + w(r65f) &
         - w(r65b) &
         + w(r78f) &
         - w(r78b) &
         + w(r86f) &
         - w(r86b) &
         + w(r91f) &
         - w(r91b) &
         + w(r93f) &
         - w(r93b) &
         - w(r95f) &
         + w(r95b) &
         + w(r100f) &
         + w(r109f) &
         - w(r109b) &
         + w(r116f) &
         - w(r116b) &
         + w(r151f) &
         - w(r151b) &
         + w(r157f) &
         - w(r157b) &
         + w(r158f) 

    cdot(sHCO) = 0.0_pr &
         - w(r30f) &
         + w(r30b) &
         - w(r31f) &
         + w(r31b) &
         - w(r32f) &
         + w(r32b) &
         - w(r33f) &
         + w(r33b) &
         - w(r34f) &
         + w(r34b) &
         - w(r35f) &
         + w(r35b) &
         - w(r36f) &
         -2.0_pr * w(r37f) &
         - w(r38f) &
         + w(r38b) &
         + w(r39f) &
         - w(r39b) &
         -2.0_pr * w(r40f) &
         + 2.0_pr * w(r40b) &
         - w(r41f) &
         + w(r41b) &
         + w(r43f) &
         - w(r43b) &
         + w(r44f) &
         - w(r44b) &
         + w(r45f) &
         - w(r45b) &
         + w(r46f) &
         - w(r46b) &
         + w(r47f) &
         - w(r47b) &
         + w(r50f) &
         - w(r50b) &
         - w(r60f) &
         + w(r60b) &
         - w(r62f) &
         + w(r62b) &
         + w(r95f) &
         - w(r95b) &
         + w(r108f) &
         - w(r108b) &
         + w(r118f) &
         - w(r118b) &
         + w(r149f) &
         - w(r149b) &
         + w(r157f) &
         - w(r157b) 

    cdot(sCH3OH) = 0.0_pr &
         + w(r50f) &
         - w(r50b) &
         - w(r51f) &
         + w(r51b) &
         + w(r61f) &
         - w(r61b) &
         - w(r62f) &
         + w(r62b) &
         + w(r65f) &
         - w(r65b) &
         - w(r66f) &
         + w(r66b) &
         - w(r67f) &
         + w(r67b) &
         - w(r68f) &
         + w(r68b) &
         - w(r69f) &
         + w(r69b) &
         - w(r70f) &
         + w(r70b) &
         - w(r71f) &
         + w(r71b) &
         - w(r72f) &
         + w(r72b) &
         - w(r73f) &
         + w(r73b) &
         - w(r74f) &
         + w(r74b) &
         - w(r75f) &
         + w(r75b) &
         - w(r76f) &
         + w(r76b) &
         + w(r78f) &
         - w(r78b) &
         - w(r97f) &
         + w(r97b) &
         + w(r100f) &
         + w(r104f) &
         - w(r104b) &
         + w(r132f) &
         - w(r132b) &
         + w(r154f) &
         - w(r154b) 

    cdot(sCH2OH) = 0.0_pr &
         + w(r55f) &
         - w(r55b) &
         - w(r56f) &
         + w(r56b) &
         - w(r57f) &
         + w(r57b) &
         - w(r58f) &
         + w(r58b) &
         - w(r59f) &
         + w(r59b) &
         - w(r60f) &
         + w(r60b) &
         - w(r61f) &
         + w(r61b) &
         + w(r62f) &
         - w(r62b) &
         - w(r63f) &
         + w(r63b) &
         - w(r64f) &
         + w(r64b) &
         -2.0_pr * w(r65f) &
         + 2.0_pr * w(r65b) &
         + w(r68f) &
         - w(r68b) &
         + w(r69f) &
         - w(r69b) &
         + w(r71f) &
         - w(r71b) &
         + w(r72f) &
         - w(r72b) &
         + w(r74f) &
         - w(r74b) &
         + w(r75f) &
         - w(r75b) &
         + w(r76f) &
         - w(r76b) &
         + w(r77f) &
         - w(r77b) &
         + w(r87f) &
         - w(r87b) &
         + w(r97f) &
         - w(r97b) 

    cdot(sCH3O) = 0.0_pr &
         - w(r48f) &
         + w(r48b) &
         - w(r49f) &
         + w(r49b) &
         - w(r50f) &
         + w(r50b) &
         + w(r51f) &
         - w(r51b) &
         - w(r52f) &
         + w(r52b) &
         - w(r53f) &
         + w(r53b) &
         - w(r54f) &
         + w(r54b) &
         - w(r61f) &
         + w(r61b) &
         + w(r70f) &
         - w(r70b) &
         + w(r73f) &
         - w(r73b) &
         - w(r77f) &
         + w(r77b) &
         -2.0_pr * w(r78f) &
         + 2.0_pr * w(r78b) &
         + w(r88f) &
         - w(r88b) &
         + w(r89f) &
         - w(r89b) &
         + w(r92f) &
         - w(r92b) &
         + 2.0_pr * w(r98f) &
         - 2.0_pr * w(r98b) &
         + 2.0_pr * w(r101f) &
         + w(r102f) &
         - w(r102b) &
         + w(r103f) &
         - w(r103b) &
         + w(r105f) &
         - w(r105b) &
         - w(r132f) &
         + w(r132b) &
         - w(r154f) &
         + w(r154b) 

    cdot(sCH3O2H) = 0.0_pr &
         + w(r95f) &
         - w(r95b) &
         + w(r96f) &
         - w(r96b) &
         + w(r97f) &
         - w(r97b) &
         + w(r99f) &
         - w(r99b) &
         - w(r105f) &
         + w(r105b) &
         + w(r131f) &
         - w(r131b) &
         + w(r135f) &
         - w(r135b) &
         + w(r155f) &
         - w(r155b) 

    cdot(sCH3O2) = 0.0_pr &
         + w(r94f) &
         - w(r94b) &
         - w(r95f) &
         + w(r95b) &
         - w(r96f) &
         + w(r96b) &
         - w(r97f) &
         + w(r97b) &
         - w(r98f) &
         + w(r98b) &
         - w(r99f) &
         + w(r99b) &
         -2.0_pr * w(r100f) &
         -2.0_pr * w(r101f) &
         - w(r102f) &
         + w(r102b) &
         - w(r103f) &
         + w(r103b) &
         - w(r104f) &
         + w(r104b) &
         - w(r131f) &
         + w(r131b) &
         - w(r135f) &
         + w(r135b) &
         - w(r155f) &
         + w(r155b) 

    cdot(sCH4) = 0.0_pr &
         + w(r38f) &
         - w(r38b) &
         + w(r46f) &
         - w(r46b) &
         + w(r51f) &
         - w(r51b) &
         + w(r52f) &
         - w(r52b) &
         + w(r76f) &
         - w(r76b) &
         + w(r79f) &
         - w(r79b) &
         - w(r80f) &
         + w(r80b) &
         - w(r81f) &
         + w(r81b) &
         - w(r82f) &
         + w(r82b) &
         - w(r83f) &
         + w(r83b) &
         - w(r84f) &
         + w(r84b) &
         + w(r90f) &
         - w(r90b) &
         - w(r96f) &
         + w(r96b) &
         + w(r129f) &
         - w(r129b) &
         + w(r137f) &
         - w(r137b) &
         + w(r152f) &
         - w(r152b) 

    cdot(sCH3) = 0.0_pr &
         - w(r38f) &
         + w(r38b) &
         - w(r46f) &
         + w(r46b) &
         - w(r51f) &
         + w(r51b) &
         - w(r52f) &
         + w(r52b) &
         + w(r66f) &
         - w(r66b) &
         - w(r76f) &
         + w(r76b) &
         - w(r79f) &
         + w(r79b) &
         + w(r80f) &
         - w(r80b) &
         + w(r81f) &
         - w(r81b) &
         + w(r82f) &
         - w(r82b) &
         + w(r83f) &
         - w(r83b) &
         + 2.0_pr * w(r84f) &
         - 2.0_pr * w(r84b) &
         - w(r85f) &
         + w(r85b) &
         - w(r86f) &
         + w(r86b) &
         - w(r87f) &
         + w(r87b) &
         - w(r88f) &
         + w(r88b) &
         - w(r89f) &
         + w(r89b) &
         - w(r90f) &
         + w(r90b) &
         - w(r91f) &
         + w(r91b) &
         - w(r92f) &
         + w(r92b) &
         - w(r93f) &
         + w(r93b) &
         - w(r94f) &
         + w(r94b) &
         + w(r96f) &
         - w(r96b) &
         - w(r98f) &
         + w(r98b) &
         + w(r110f) &
         - w(r110b) &
         + w(r117f) &
         - w(r117b) &
         -2.0_pr * w(r123f) &
         + 2.0_pr * w(r123b) &
         - w(r129f) &
         + w(r129b) &
         + w(r133f) &
         - w(r133b) &
         - w(r137f) &
         + w(r137b) &
         -2.0_pr * w(r138f) &
         + 2.0_pr * w(r138b) &
         + w(r149f) &
         - w(r149b) &
         + w(r151f) &
         - w(r151b) &
         - w(r152f) &
         + w(r152b) &
         - w(r156f) &
         + w(r156b) 

    cdot(sCH2) = 0.0_pr &
         - w(r84f) &
         + w(r84b) &
         + w(r106f) &
         - w(r106b) &
         + w(r113f) &
         - w(r113b) &
         + w(r114f) &
         - w(r114b) &
         + w(r115f) &
         - w(r115b) &
         - w(r117f) &
         + w(r117b) &
         - w(r118f) &
         + w(r118b) &
         - w(r119f) &
         - w(r120f) 

    cdot(sCH2GSG) = 0.0_pr &
         + w(r67f) &
         - w(r67b) &
         + w(r85f) &
         - w(r85b) &
         - w(r106f) &
         + w(r106b) &
         - w(r107f) &
         + w(r107b) &
         - w(r108f) &
         + w(r108b) &
         - w(r109f) &
         + w(r109b) &
         - w(r110f) &
         + w(r110b) &
         - w(r111f) &
         - w(r112f) &
         + w(r112b) &
         - w(r113f) &
         + w(r113b) &
         - w(r114f) &
         + w(r114b) &
         - w(r115f) &
         + w(r115b) &
         - w(r116f) &
         + w(r116b) &
         - w(r133f) &
         + w(r133b) &
         + w(r144f) &
         - w(r144b) &
         - w(r156f) &
         + w(r156b) 

    cdot(sC) = 0.0_pr &
         - w(r121f) &
         + w(r121b) &
         - w(r122f) &
         + w(r122b) 

    cdot(sC2H6) = 0.0_pr &
         + w(r123f) &
         - w(r123b) &
         + w(r124f) &
         - w(r124b) &
         - w(r125f) &
         + w(r125b) &
         - w(r126f) &
         + w(r126b) &
         - w(r127f) &
         + w(r127b) &
         - w(r128f) &
         + w(r128b) &
         - w(r129f) &
         + w(r129b) &
         - w(r130f) &
         + w(r130b) &
         - w(r131f) &
         + w(r131b) &
         - w(r132f) &
         + w(r132b) &
         - w(r133f) &
         + w(r133b) 

    cdot(sC2H5) = 0.0_pr &
         - w(r124f) &
         + w(r124b) &
         + w(r125f) &
         - w(r125b) &
         + w(r126f) &
         - w(r126b) &
         + w(r127f) &
         - w(r127b) &
         + w(r128f) &
         - w(r128b) &
         + w(r129f) &
         - w(r129b) &
         + w(r130f) &
         - w(r130b) &
         + w(r131f) &
         - w(r131b) &
         + w(r132f) &
         - w(r132b) &
         + w(r133f) &
         - w(r133b) &
         + w(r134f) &
         - w(r134b) &
         + w(r136f) &
         - w(r136b) &
         - w(r137f) &
         + w(r137b) &
         + w(r138f) &
         - w(r138b) &
         - w(r139f) &
         + w(r139b) &
         - w(r140f) &
         + w(r140b) &
         - w(r141f) &
         + w(r141b) 

    cdot(sC2H4) = 0.0_pr &
         - w(r134f) &
         + w(r134b) &
         -2.0_pr * w(r136f) &
         + 2.0_pr * w(r136b) &
         + w(r137f) &
         - w(r137b) &
         + w(r139f) &
         - w(r139b) &
         + w(r140f) &
         - w(r140b) &
         + w(r141f) &
         - w(r141b) &
         + w(r147f) &
         - w(r147b) &
         - w(r148f) &
         + w(r148b) &
         - w(r149f) &
         + w(r149b) &
         - w(r150f) &
         + w(r150b) &
         - w(r151f) &
         + w(r151b) &
         - w(r152f) &
         + w(r152b) &
         - w(r153f) &
         + w(r153b) &
         - w(r154f) &
         + w(r154b) &
         - w(r155f) &
         + w(r155b) &
         + w(r156f) &
         - w(r156b) 

    cdot(sC2H3) = 0.0_pr &
         + w(r136f) &
         - w(r136b) &
         - w(r147f) &
         + w(r147b) &
         + w(r148f) &
         - w(r148b) &
         + w(r150f) &
         - w(r150b) &
         + w(r152f) &
         - w(r152b) &
         + w(r153f) &
         - w(r153b) &
         + w(r154f) &
         - w(r154b) &
         + w(r155f) &
         - w(r155b) &
         - w(r157f) &
         + w(r157b) &
         - w(r158f) 

    cdot(sHCCO) = 0.0_pr &
         - w(r142f) &
         - w(r143f) &
         - w(r144f) &
         + w(r144b) &
         - w(r145f) &
         - w(r146f) 

  
    return
  end subroutine get_production_rates


  ! ----------------------------------------------- !
  ! Internal AVBP routine                            !
  ! ----------------------------------------------- !
  subroutine internal_AVBP(P, T, thickness, c, wdot, rrate)

    use mod_param_defs
    use mod_misc_defs, ONLY: dtchem_sub
    use mod_input_param_defs, ONLY : nrrate_ARC, irrate_ARC
    use mod_solut, ONLY : Lrrate_ARC
    use mod_error, ONLY : print_error_and_quit
    implicit none

    real(pr), dimension(nspec) :: c, wdot
    real(pr), dimension(nqss) :: cqss
    real(pr), dimension(nreac + nreac_reverse) :: w,k
    real(pr), dimension(nTB + nFO) :: M

    real(pr) :: T,P,thickness

    real(pr), dimension(nrrate_ARC) :: rrate
    integer :: i
    character(len=strl) :: message                                      !< error or debug message for screen output



  call get_thirdbodies(M,c)

    call get_rate_coefficients(k,M,T,P)
    call get_reaction_rates(w,k,M,c,cqss)

    ! Evaluate production rates
    call get_production_rates(wdot,w)
    ! ARC reaction rate wanted
    if (irrate_ARC == 2) then
      if (nrrate_ARC > (nreac + nreac_reverse)) then
        write ( message, '(A,I0)' ) "Maximum number of reaction rate demanded exceeded, check if the number of reactions in the name of your f90 file is the same as in your  limit is :", (nreac + nreac_reverse)
        call print_error_and_quit ( err_message=message )
      end if
    else if (irrate_ARC == 1) then
      do i=1,nrrate_ARC
        if (Lrrate_ARC(i) > (nreac + nreac_reverse)) then
          write ( message, '(A,I0)' ) "Maximum number of reaction rate demanded exceeded, limit is :", (nreac + nreac_reverse)
          call print_error_and_quit ( err_message=message )
        end if
      end do
    end if

    rrate = 0.0
    do i=1,nrrate_ARC
      select case (irrate_ARC)
      case (2)
        rrate(i) = w(i)
      case (1)
        rrate(i) = w(Lrrate_ARC(i))
      case default
      end select
    end do


    return
  end subroutine internal_AVBP

end module mod_CH4H2_28_304_0_MT

! ---------------------------------------- !
! Actual routine called from AVBP          !
! ---------------------------------------- !

subroutine CH4H2_28_304_0_MT(nnode,neqs,rhoinv,press,tempe,w_spec,wmol,source_spec, rrate_ARC)

  use mod_param_defs
  use mod_CH4H2_28_304_0_MT, ONLY: internal_AVBP
  use mod_input_param_defs, ONLY : nrrate_ARC
  use mod_compute_defs, ONLY: thick
  implicit none

  ! In/out variables
  integer, intent(IN) :: nnode, neqs
  real(pr), dimension(1:neqs), intent(IN) :: wmol
  real(pr), dimension(1:nnode), intent(IN) :: rhoinv,press,tempe
  real(pr), dimension(1:neqs,1:nnode), intent(IN) :: w_spec
  real(pr), dimension(1:neqs,1:nnode), intent(OUT) ::source_spec
  real(pr), dimension(1:nrrate_ARC,1:nnode), intent(OUT) :: rrate_ARC


  ! Local variables
  real(pr), dimension(1:neqs) :: C
  real(pr), dimension(1:neqs) :: source_spec_buf
  real(pr), dimension(1:nrrate_ARC) :: rrate_buf

  real(pr) :: P,T, thickness
  integer :: n,k

  do n=1,nnode
     P = press(n)
     T = tempe(n)
     thickness = thick(n)

     ! Activity concentrations in mol/m3
     C(:) = min( w_spec(:, n), one/rhoinv(n) ) ! bugfix
     C = C / wmol
     C = max(C, 0.0_pr)

     !   The internal ARCANE routine is called
     call internal_AVBP ( P, T, thickness, C, source_spec_buf, rrate_buf )

     !   Conversion from mol/m3/s to kg/m3/s
     source_spec(:,n) = source_spec_buf(:) * wmol(:)
     
     !   Get the reaction rate
     rrate_ARC(:,n) = rrate_buf(:)

  end do

end subroutine CH4H2_28_304_0_MT

subroutine get_reacname_CH4H2_28_304_0_MT(reacexp_ARC)
  use mod_input_param_defs, ONLY : nrrate_ARC, irrate_ARC
  use mod_solut, ONLY : Lrrate_ARC
  use mod_CH4H2_28_304_0_MT, ONLY : reacexp, reaction_expressions
  implicit none

  character(len=65), dimension(nrrate_ARC) :: reacexp_ARC
  integer :: i

  call reaction_expressions
  do i=1,nrrate_ARC
    if (irrate_ARC==1) then
      reacexp_ARC(i) = reacexp(Lrrate_ARC(i))
    else
      reacexp_ARC(i) = reacexp(i)
    end if
  end do

end subroutine get_reacname_CH4H2_28_304_0_MT
